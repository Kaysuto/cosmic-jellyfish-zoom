{"version":3,"file":"switch-goiC7JOz.js","sources":["../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/ui/switch.tsx"],"sourcesContent":["\"use client\";\n\n// src/switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        SwitchBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BUBBLE_INPUT_NAME = \"SwitchBubbleInput\";\nvar SwitchBubbleInput = React.forwardRef(\n  ({\n    __scopeSwitch,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\";\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className,\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n));\r\nSwitch.displayName = SwitchPrimitives.Root.displayName;\r\n\r\nexport { Switch };\r\n"],"names":["SWITCH_NAME","createSwitchContext","createSwitchScope","createContextScope","SwitchProvider","useSwitchContext","Switch","React.forwardRef","props","forwardedRef","_a","__scopeSwitch","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","switchProps","__objRest","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","checked","setChecked","useControllableState","jsxs","jsx","Primitive","__spreadProps","__spreadValues","getState","composeEventHandlers","event","prevChecked","SwitchBubbleInput","THUMB_NAME","SwitchThumb","thumbProps","context","BUBBLE_INPUT_NAME","_b","control","bubbles","ref","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","Root","Thumb","className","SwitchPrimitives.Root","cn","SwitchPrimitives.Thumb"],"mappings":"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","x_google_ignoreList":[0]}