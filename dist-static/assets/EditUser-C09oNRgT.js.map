{"version":3,"file":"EditUser-C09oNRgT.js","sources":["../../src/components/admin/profile/UserProfileCard.tsx","../../src/components/admin/profile/AdminUpdateUserForm.tsx","../../src/components/admin/profile/AdminMfaManager.tsx","../../src/pages/admin/EditUser.tsx"],"sourcesContent":["import { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Badge } from '@/components/ui/badge';\nimport { Calendar, Edit, Loader2, Trash2 } from 'lucide-react';\nimport { getGravatarURL } from '@/lib/gravatar';\nimport { Profile } from '@/hooks/useProfile';\nimport { Session } from '@supabase/supabase-js';\nimport { format } from 'date-fns';\nimport { fr, enUS } from 'date-fns/locale';\nimport { supabase } from '@/integrations/supabase/client';\nimport { showSuccess, showError } from '@/utils/toast';\nimport { Button, buttonVariants } from '@/components/ui/button';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\ninterface UserProfileCardProps {\n  profile: Profile;\n  session: Session | null;\n  onProfileUpdate: () => void;\n}\n\nconst UserProfileCard = ({ profile, session, onProfileUpdate }: UserProfileCardProps) => {\n  const { t, i18n } = useTranslation();\n  const currentLocale = i18n.language === 'fr' ? fr : enUS;\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n\n  const isOwnProfile = session?.user?.id === profile.id;\n\n  const handleAvatarClick = () => {\n    if (isOwnProfile) {\n      fileInputRef.current?.click();\n    }\n  };\n\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file || !isOwnProfile) return;\n\n    setIsUploading(true);\n    const fileName = `${Date.now()}_${file.name}`;\n    const filePath = `${profile.id}/${fileName}`;\n\n    const { error: uploadError } = await supabase.storage\n      .from('avatars')\n      .upload(filePath, file);\n\n    if (uploadError) {\n      showError(uploadError.message);\n      setIsUploading(false);\n      return;\n    }\n\n    const { data: { publicUrl } } = supabase.storage\n      .from('avatars')\n      .getPublicUrl(filePath);\n\n    const { error: dbError } = await supabase\n      .from('profiles')\n      .update({ avatar_url: publicUrl, updated_at: new Date().toISOString() })\n      .eq('id', profile.id);\n\n    if (dbError) {\n      showError(dbError.message);\n    } else {\n      showSuccess('Avatar mis à jour avec succès !');\n      onProfileUpdate();\n    }\n    setIsUploading(false);\n  };\n\n  const handleDeleteAvatar = async () => {\n    if (!profile.avatar_url || !isOwnProfile) return;\n\n    setIsDeleting(true);\n    try {\n      const url = new URL(profile.avatar_url);\n      const filePath = url.pathname.split('/avatars/')[1];\n\n      // Supprimer le fichier du stockage\n      const { error: storageError } = await supabase.storage.from('avatars').remove([filePath]);\n      if (storageError) throw storageError;\n\n      // Mettre à jour la base de données\n      const { error: dbError } = await supabase\n        .from('profiles')\n        .update({ avatar_url: null, updated_at: new Date().toISOString() })\n        .eq('id', profile.id);\n      if (dbError) throw dbError;\n\n      showSuccess(\"Avatar supprimé avec succès.\");\n      onProfileUpdate();\n    } catch (error: any) {\n      showError(`Erreur lors de la suppression de l'avatar: ${error.message}`);\n    } finally {\n      setIsDeleting(false);\n      setIsDeleteDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Card className=\"overflow-hidden\">\n        <CardHeader className=\"bg-muted/30 p-6\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative group\">\n              <Avatar className=\"h-20 w-20 border-4 border-background\">\n                <AvatarImage src={profile.avatar_url || getGravatarURL(profile.email, 160)} />\n                <AvatarFallback className=\"text-3xl\">\n                  {profile.first_name?.charAt(0)}\n                  {profile.last_name?.charAt(0)}\n                </AvatarFallback>\n              </Avatar>\n              {isOwnProfile && (\n                <div className=\"absolute inset-0 bg-black/60 flex items-center justify-center rounded-full opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <button\n                    onClick={handleAvatarClick}\n                    disabled={isUploading || isDeleting}\n                    className=\"p-2 text-white hover:text-blue-400 disabled:opacity-50\"\n                    title=\"Modifier l'avatar\"\n                  >\n                    {isUploading ? <Loader2 className=\"h-5 w-5 animate-spin\" /> : <Edit className=\"h-5 w-5\" />}\n                  </button>\n                  {profile.avatar_url && (\n                    <button\n                      onClick={() => setIsDeleteDialogOpen(true)}\n                      disabled={isUploading || isDeleting}\n                      className=\"p-2 text-white hover:text-red-400 disabled:opacity-50\"\n                      title=\"Supprimer l'avatar\"\n                    >\n                      {isDeleting ? <Loader2 className=\"h-5 w-5 animate-spin\" /> : <Trash2 className=\"h-5 w-5\" />}\n                    </button>\n                  )}\n                </div>\n              )}\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleFileChange}\n                className=\"hidden\"\n                accept=\"image/png, image/jpeg, image/gif\"\n                disabled={isUploading || !isOwnProfile}\n              />\n            </div>\n            <div>\n              <h2 className=\"text-2xl font-bold text-foreground\">\n                {profile.first_name} {profile.last_name}\n              </h2>\n              <p className=\"text-sm text-muted-foreground\">{profile.email}</p>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-6 space-y-4\">\n          <div>\n            <h3 className=\"text-xs font-semibold text-muted-foreground mb-1\">{t('role')}</h3>\n            <Badge variant={profile.role === 'admin' ? 'default' : 'secondary'}>\n              {profile.role === 'admin' ? t('admin_role') : t('user_role')}\n            </Badge>\n          </div>\n          {isOwnProfile && session?.user?.created_at && (\n            <div>\n              <h3 className=\"text-xs font-semibold text-muted-foreground mb-1\">{t('member_since')}</h3>\n              <div className=\"flex items-center gap-2 text-sm text-foreground\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span>{format(new Date(session.user.created_at), 'd MMMM yyyy', { locale: currentLocale })}</span>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Supprimer l'avatar ?</AlertDialogTitle>\n            <AlertDialogDescription>\n              Cette action est irréversible. Votre avatar sera supprimé et remplacé par l'image par défaut de Gravatar.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel disabled={isDeleting}>Annuler</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDeleteAvatar}\n              disabled={isDeleting}\n              className={buttonVariants({ variant: \"destructive\" })}\n            >\n              {isDeleting ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n              Supprimer\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default UserProfileCard;","import { useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { supabase } from '@/integrations/supabase/client';\nimport { showSuccess, showError } from '@/utils/toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Mail, KeyRound } from 'lucide-react';\nimport { Profile } from '@/hooks/useProfile';\nimport { useMemo, useEffect } from 'react';\nimport { useSession } from '@/contexts/AuthContext';\n\nconst emailRegex = new RegExp(\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n);\n\ninterface AdminUpdateUserFormProps {\n  user: Profile;\n}\n\nconst AdminUpdateUserForm = ({ user }: AdminUpdateUserFormProps) => {\n  const { t, i18n } = useTranslation();\n  const { session } = useSession();\n\n  const formSchema = useMemo(() => z.object({\n    email: z.string().regex(emailRegex, { message: t('invalid_email') }),\n    password: z.string().optional(),\n  }), [t]);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    values: { email: user.email || '' },\n  });\n\n  useEffect(() => {\n    if (Object.keys(form.formState.errors).length > 0) form.trigger();\n  }, [i18n.language, form]);\n\n  const onSubmit = async (values: z.infer<typeof formSchema>) => {\n    if (!session?.user) return;\n\n    const attributes: { email?: string; password?: string } = {};\n    if (values.email && values.email !== user.email) {\n      attributes.email = values.email;\n    }\n    if (values.password) {\n      attributes.password = values.password;\n    }\n\n    if (Object.keys(attributes).length === 0) {\n      showSuccess(\"Aucune modification à enregistrer.\");\n      return;\n    }\n\n    try {\n      const { error } = await supabase.functions.invoke('update-user-details', {\n        body: { userId: user.id, attributes },\n      });\n      if (error) throw error;\n      showSuccess(\"Détails de l'utilisateur mis à jour avec succès.\");\n      await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'admin_user_details_updated', details: { target_user_id: user.id, changes: attributes } });\n      form.reset({ ...values, password: '' });\n    } catch (error: any) {\n      showError(`Erreur: ${error.message}`);\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\"><Mail className=\"h-5 w-5\" /> {t('change_email_or_password')}</CardTitle>\n        <CardDescription>{t('update_user_email_password_desc')}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField control={form.control} name=\"email\" render={({ field }) => (<FormItem><FormLabel>{t('email_address')}</FormLabel><FormControl><Input type=\"email\" {...field} /></FormControl><FormMessage /></FormItem>)} />\n            <FormField control={form.control} name=\"password\" render={({ field }) => (<FormItem><FormLabel>{t('new_password_optional')}</FormLabel><FormControl><Input type=\"password\" {...field} /></FormControl><FormMessage /></FormItem>)} />\n            <Button type=\"submit\" disabled={form.formState.isSubmitting}>{t('save_changes')}</Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AdminUpdateUserForm;","import { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { supabase } from '@/integrations/supabase/client';\nimport { showSuccess, showError } from '@/utils/toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button, buttonVariants } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ShieldCheck, ShieldOff } from 'lucide-react';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from '@/components/ui/alert-dialog';\nimport { Profile } from '@/hooks/useProfile';\nimport { useSession } from '@/contexts/AuthContext';\n\ninterface AdminMfaManagerProps {\n  user: Profile;\n}\n\nconst AdminMfaManager = ({ user }: AdminMfaManagerProps) => {\n  const { t } = useTranslation();\n  const { session } = useSession();\n  const [hasMfa, setHasMfa] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUnenrollDialogOpen, setIsUnenrollDialogOpen] = useState(false);\n\n  const fetchMfaStatus = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('get-user-mfa-factors', {\n        body: { userId: user.id },\n      });\n      if (error) throw error;\n      if (data && data.factors) {\n        const verifiedFactor = data.factors.find((f: any) => f.status === 'verified');\n        setHasMfa(!!verifiedFactor);\n      } else {\n        setHasMfa(false);\n      }\n    } catch (error: any) {\n      showError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [user.id]);\n\n  useEffect(() => {\n    fetchMfaStatus();\n  }, [fetchMfaStatus]);\n\n  const handleDisableMfa = async () => {\n    if (!session?.user) return;\n    try {\n      const { error } = await supabase.functions.invoke('admin-unenroll-mfa', { body: { userId: user.id } });\n      if (error) throw error;\n      showSuccess(t('mfa_disabled_for_user', { email: user.email }));\n      await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'admin_mfa_disabled', details: { target_user_id: user.id, email: user.email } });\n      fetchMfaStatus();\n    } catch (error: any) {\n      showError(`${t('error_disabling_mfa')}: ${error.message}`);\n    } finally {\n      setIsUnenrollDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\"><ShieldCheck className=\"h-5 w-5\" /> {t('mfa_title')}</CardTitle>\n          <CardDescription>{t('manage_user_mfa_desc')}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? <Skeleton className=\"h-10 w-32\" /> : (\n            hasMfa ? (\n              <Button variant=\"destructive\" onClick={() => setIsUnenrollDialogOpen(true)}>\n                <ShieldOff className=\"mr-2 h-4 w-4\" />\n                {t('disable_mfa')}\n              </Button>\n            ) : (\n              <p className=\"text-sm text-muted-foreground\">{t('user_mfa_disabled')}</p>\n            )\n          )}\n        </CardContent>\n      </Card>\n\n      <AlertDialog open={isUnenrollDialogOpen} onOpenChange={setIsUnenrollDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>{t('confirm_disable_mfa_title')}</AlertDialogTitle>\n            <AlertDialogDescription>{t('confirm_disable_mfa_desc', { email: user.email })}</AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>{t('cancel')}</AlertDialogCancel>\n            <AlertDialogAction onClick={handleDisableMfa} className={buttonVariants({ variant: \"destructive\" })}>{t('disable_mfa')}</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default AdminMfaManager;","import { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useUserById } from '@/hooks/useUserById';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\nimport UserProfileCard from '@/components/admin/profile/UserProfileCard';\nimport UpdateProfileForm from '@/components/admin/profile/UpdateProfileForm';\nimport AdminUpdateUserForm from '@/components/admin/profile/AdminUpdateUserForm';\nimport AdminMfaManager from '@/components/admin/profile/AdminMfaManager';\nimport { useSession } from '@/contexts/AuthContext';\n\nconst EditUserPage = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { user, loading, refreshUser } = useUserById(userId);\n  const { session } = useSession();\n\n  const LoadingSkeleton = () => (\n    <div className=\"space-y-6\">\n      <Skeleton className=\"h-10 w-32\" />\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-1\">\n          <Skeleton className=\"h-56 w-full\" />\n        </div>\n        <div className=\"lg:col-span-2 space-y-6\">\n          <Skeleton className=\"h-56 w-full\" />\n          <Skeleton className=\"h-48 w-full\" />\n          <Skeleton className=\"h-56 w-full\" />\n        </div>\n      </div>\n    </div>\n  );\n\n  if (loading) {\n    return <LoadingSkeleton />;\n  }\n\n  if (!user) {\n    return <div>{t('user_not_found')}</div>;\n  }\n\n  return (\n    <motion.div \n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\n      className=\"space-y-6\"\n    >\n      <Button variant=\"outline\" onClick={() => navigate('/admin/users')}>\n        <ArrowLeft className=\"mr-2 h-4 w-4\" />\n        {t('back_to_users')}\n      </Button>\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 items-start\">\n        <div className=\"lg:col-span-1 space-y-6\">\n          <UserProfileCard profile={user} session={session} onProfileUpdate={refreshUser} />\n        </div>\n        <div className=\"lg:col-span-2 space-y-6\">\n          <UpdateProfileForm profile={user} />\n          <AdminUpdateUserForm user={user} />\n          <AdminMfaManager user={user} />\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default EditUserPage;"],"names":["UserProfileCard","profile","session","onProfileUpdate","t","i18n","useTranslation","currentLocale","fr","enUS","fileInputRef","useRef","isUploading","setIsUploading","useState","isDeleting","setIsDeleting","isDeleteDialogOpen","setIsDeleteDialogOpen","isOwnProfile","_a","handleAvatarClick","handleFileChange","event","__async","file","fileName","filePath","uploadError","supabase","showError","publicUrl","dbError","showSuccess","handleDeleteAvatar","storageError","error","jsxs","Fragment","Card","jsx","CardHeader","Avatar","AvatarImage","getGravatarURL","AvatarFallback","_b","_c","Loader2","Edit","Trash2","CardContent","Badge","_d","Calendar","format","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","buttonVariants","emailRegex","AdminUpdateUserForm","user","useSession","formSchema","useMemo","z.object","z.string","form","useForm","zodResolver","useEffect","onSubmit","values","attributes","__spreadProps","__spreadValues","CardTitle","Mail","CardDescription","Form","FormField","field","FormItem","FormLabel","FormControl","Input","FormMessage","Button","AdminMfaManager","hasMfa","setHasMfa","isLoading","setIsLoading","isUnenrollDialogOpen","setIsUnenrollDialogOpen","fetchMfaStatus","useCallback","data","verifiedFactor","f","handleDisableMfa","ShieldCheck","Skeleton","ShieldOff","EditUserPage","userId","useParams","navigate","useNavigate","loading","refreshUser","useUserById","LoadingSkeleton","motion","ArrowLeft","UpdateProfileForm"],"mappings":"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"}