{"version":3,"file":"UpdatePassword-DFswC76W.js","sources":["../../src/pages/UpdatePassword.tsx"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\n\nimport { supabase } from '@/integrations/supabase/client';\nimport { showSuccess, showError } from '@/utils/toast';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Loader2, AlertTriangle } from 'lucide-react';\nimport { FooterContent } from '@/components/layout/FooterContent';\nimport { useSession } from '@/contexts/AuthContext';\n\nconst UpdatePassword = () => {\n  const { t, i18n } = useTranslation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const { session, loading: sessionLoading } = useSession();\n  const [pageError, setPageError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const hash = window.location.hash.substring(1);\n    if (hash) {\n      const params = new URLSearchParams(hash);\n      const errorCode = params.get('error_code');\n      const errorDescription = params.get('error_description');\n\n      if (errorCode === 'otp_expired') {\n        setPageError(t('email_link_expired'));\n      } else if (errorDescription) {\n        setPageError(errorDescription.replace(/\\+/g, ' '));\n      }\n    }\n  }, [t]);\n\n  const isReady = !sessionLoading && session && !pageError;\n\n  const passwordSchema = useMemo(() => z.object({\n    password: z.string()\n      .min(6, { message: t('password_too_short') })\n      .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/, { message: t('password_requirements') }),\n    confirmPassword: z.string(),\n  }).refine(data => data.password === data.confirmPassword, {\n    message: t('passwords_do_not_match'),\n    path: ['confirmPassword'],\n  }), [i18n.language]);\n\n  const form = useForm<z.infer<typeof passwordSchema>>({\n    resolver: zodResolver(passwordSchema),\n    defaultValues: { password: '', confirmPassword: '' },\n  });\n\n  useEffect(() => {\n    if (Object.keys(form.formState.errors).length > 0) {\n      form.trigger();\n    }\n  }, [i18n.language, form]);\n\n  const onSubmit = async (values: z.infer<typeof passwordSchema>) => {\n    setIsLoading(true);\n    const { error } = await supabase.auth.updateUser({ password: values.password });\n    if (error) {\n      showError(error.message);\n    } else {\n      showSuccess(t('password_updated_successfully'));\n      navigate('/login');\n    }\n    setIsLoading(false);\n  };\n\n  const renderCardContent = () => {\n    if (pageError) {\n      return (\n        <div className=\"text-center space-y-4\">\n          <AlertTriangle className=\"mx-auto h-10 w-10 text-destructive\" />\n          <p className=\"text-destructive-foreground\">{pageError}</p>\n          <Button asChild className=\"w-full\">\n            <Link to=\"/login\">{t('back_to_login')}</Link>\n          </Button>\n        </div>\n      );\n    }\n\n    if (isReady) {\n      return (\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField control={form.control} name=\"password\" render={({ field }) => (\n              <FormItem><FormLabel>{t('new_password')}</FormLabel><FormControl><Input type=\"password\" {...field} /></FormControl><FormMessage /></FormItem>\n            )} />\n            <FormField control={form.control} name=\"confirmPassword\" render={({ field }) => (\n              <FormItem><FormLabel>{t('confirm_new_password')}</FormLabel><FormControl><Input type=\"password\" {...field} /></FormControl><FormMessage /></FormItem>\n            )} />\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>{isLoading ? t('saving') : t('update_password')}</Button>\n          </form>\n        </Form>\n      );\n    }\n\n    return (\n      <div className=\"flex flex-col items-center justify-center h-48 text-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-gray-400 mb-4\" />\n        <p className=\"text-gray-400\">{t('loading_session')}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"relative min-h-screen flex flex-col bg-gray-900 text-white\">\n      <div className=\"absolute inset-0 z-0\">\n        <div className=\"absolute inset-0 bg-gradient-to-b from-gray-900 via-transparent to-gray-900 opacity-80\"></div>\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] bg-center [mask-image:linear-gradient(180deg,white,rgba(255,255,255,0))]\"></div>\n      </div>\n\n      <main className=\"relative z-10 flex-grow flex flex-col items-center justify-center p-4\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"w-full max-w-md\"\n        >\n          <Card className=\"bg-gray-800/50 backdrop-blur-sm border-gray-700/50 text-white\">\n            <CardHeader className=\"text-center\">\n              <CardTitle className=\"text-3xl font-extrabold tracking-tight bg-clip-text text-transparent bg-gradient-to-b from-white to-gray-400\">\n                {t('update_password')}\n              </CardTitle>\n              <CardDescription className=\"text-gray-400 pt-2\">\n                {t('update_your_password')}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {renderCardContent()}\n            </CardContent>\n          </Card>\n        </motion.div>\n      </main>\n\n      <footer className=\"relative z-10 w-full bg-transparent\">\n        <FooterContent />\n      </footer>\n    </div>\n  );\n};\n\nexport default UpdatePassword;"],"names":["UpdatePassword","t","i18n","useTranslation","navigate","useNavigate","isLoading","setIsLoading","useState","session","sessionLoading","useSession","pageError","setPageError","useEffect","hash","params","errorCode","errorDescription","isReady","passwordSchema","useMemo","z.object","z.string","data","form","useForm","zodResolver","onSubmit","values","__async","error","supabase","showError","showSuccess","renderCardContent","jsxs","jsx","AlertTriangle","Button","Link","Form","__spreadProps","__spreadValues","FormField","field","FormItem","FormLabel","FormControl","Input","FormMessage","Loader2","motion","Card","CardHeader","CardTitle","CardDescription","CardContent","FooterContent"],"mappings":"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"}