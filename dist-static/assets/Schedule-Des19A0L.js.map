{"version":3,"file":"Schedule-Des19A0L.js","sources":["../../node_modules/lucide-react/dist/esm/icons/calendar-off.js","../../node_modules/date-fns/addMonths.mjs","../../node_modules/date-fns/add.mjs","../../node_modules/date-fns/isSameDay.mjs","../../node_modules/date-fns/eachDayOfInterval.mjs","../../node_modules/date-fns/endOfWeek.mjs","../../node_modules/date-fns/isToday.mjs","../../node_modules/date-fns/subMonths.mjs","../../node_modules/date-fns/sub.mjs","../../src/components/schedule/ScheduleCard.tsx","../../src/components/ui/collapsible.tsx","../../src/pages/Schedule.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CalendarOff = createLucideIcon(\"CalendarOff\", [\n  [\"path\", { d: \"M4.2 4.2A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18\", key: \"16swn3\" }],\n  [\"path\", { d: \"M21 15.5V6a2 2 0 0 0-2-2H9.5\", key: \"yhw86o\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"path\", { d: \"M3 10h7\", key: \"1wap6i\" }],\n  [\"path\", { d: \"M21 10h-5.5\", key: \"quycpq\" }],\n  [\"path\", { d: \"m2 2 20 20\", key: \"1ooewy\" }]\n]);\n\nexport { CalendarOff as default };\n//# sourceMappingURL=calendar-off.js.map\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { addDays } from \"./addDays.mjs\";\nimport { addMonths } from \"./addMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\\\\-7\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport function add(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Add years and months\n  const _date = toDate(date);\n  const dateWithMonths =\n    months || years ? addMonths(_date, months + years * 12) : _date;\n\n  // Add weeks and days\n  const dateWithDays =\n    days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1000;\n  const finalDate = constructFrom(date, dateWithDays.getTime() + msToAdd);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default add;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link eachDayOfInterval} function options.\n */\n\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of days from the day of the interval start to the day of the interval end\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport function eachDayOfInterval(interval, options) {\n  const startDate = toDate(interval.start);\n  const endDate = toDate(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const endTime = reversed ? +startDate : +endDate;\n  const currentDate = reversed ? endDate : startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachDayOfInterval;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { constructNow } from \"./constructNow.mjs\";\nimport { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date) {\n  return isSameDay(date, constructNow(date));\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { subDays } from \"./subDays.mjs\";\nimport { subMonths } from \"./subMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Subtract years and months\n  const dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  const dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  const minutestoSub = minutes + hours * 60;\n  const secondstoSub = seconds + minutestoSub * 60;\n  const mstoSub = secondstoSub * 1000;\n  const finalDate = constructFrom(date, dateWithoutDays.getTime() - mstoSub);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default sub;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Check, Hourglass } from 'lucide-react';\nimport { MediaItem } from '@/components/catalog/MediaGrid';\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\n\ninterface ScheduleCardProps {\n  item: MediaItem;\n  currentMediaType?: 'tv' | 'anime';\n}\n\nconst ScheduleCard: React.FC<ScheduleCardProps> = ({ item, currentMediaType }) => {\n  const { t } = useTranslation();\n  // Affichage du titre avec numéro d'épisode si dispo\n  let title = item.title || item.name;\n  if ((item.seasonNumber !== undefined && item.episodeNumber !== undefined) && title) {\n    title = `${title} • S${String(item.seasonNumber).padStart(2, '0')}E${String(item.episodeNumber).padStart(2, '0')}`;\n  }\n\n  // Différenciation visuelle si c'est un animé dans l'onglet séries (cas rare)\n  const isAnime = (() => {\n    const genres = item.genre_ids || item.genres || [];\n    const hasAnimeGenre = Array.isArray(genres)\n      ? genres.some((g) => (typeof g === 'number' && g === 16) || (typeof g === 'object' && g?.id === 16))\n      : false;\n    const originCountries = item.origin_country || item.origin_countries || [];\n    const isJapanese = Array.isArray(originCountries)\n      ? originCountries.includes('JP')\n      : false;\n    return item.media_type === 'anime' || hasAnimeGenre || isJapanese;\n  })();\n\n  // Appliquer l'anneau rose seulement si on est dans l'onglet \"tv\" et que c'est un animé\n  const shouldShowAnimeRing = currentMediaType === 'tv' && isAnime;\n\n  return (\n    <Link to={`/media/${item.media_type}/${item.id}`} className=\"block group\">\n      <Card className={\n        `overflow-hidden transition-all duration-300 hover:shadow-md hover:border-primary/50 p-2 ${shouldShowAnimeRing ? 'ring-2 ring-pink-400/60' : ''}`\n      }>\n        <div className=\"flex items-start gap-3\">\n          {item.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w200${item.poster_path}`}\n              alt={title}\n              className=\"w-12 h-[72px] object-cover rounded-md flex-shrink-0\"\n              loading=\"lazy\"\n            />\n          ) : (\n            <div className=\"w-12 h-[72px] bg-muted rounded-md flex-shrink-0\" />\n          )}\n          <div className=\"flex-grow min-w-0\">\n            <h4 className=\"font-semibold text-sm line-clamp-2 group-hover:text-primary\">{title}</h4>\n            {/* Le titre contient déjà la saison/épisode si dispo */}\n            <div className=\"flex flex-wrap items-center justify-between gap-x-2 gap-y-1 mt-1 text-xs text-muted-foreground\">\n              {/* Show Available only when episode exists (isAvailable === true).\n                  Show 'Bientôt' only if isSoon === true (series synced but episode missing).\n                  Otherwise show nothing to avoid noise. */}\n              {item.isAvailable ? (\n                <Badge variant=\"secondary\" className=\"bg-green-500/20 text-green-400 border-none px-2 py-0.5\">\n                  <Check className=\"h-3 w-3 mr-1\" />\n                  {t('available')}\n                </Badge>\n              ) : item.isSoon ? (\n                <Tooltip>\n                  <TooltipTrigger>\n                    <Badge variant=\"secondary\" className=\"bg-yellow-500/20 text-yellow-400 border-none px-2 py-0.5\">\n                      <Hourglass className=\"h-3 w-3 mr-1\" />\n                      {t('soon')}\n                    </Badge>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    <p>{t('soon_available')}</p>\n                  </TooltipContent>\n                </Tooltip>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </Card>\n    </Link>\n  );\n};\n\nexport default ScheduleCard;","import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\r\n\r\nconst Collapsible = CollapsiblePrimitive.Root;\r\n\r\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\r\n\r\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;\r\n\r\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\r\n","import { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { supabase } from '@/integrations/supabase/client';\nimport { showError } from '@/utils/toast';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Tabs, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { ChevronLeft, ChevronRight, Calendar, CalendarOff, ChevronDown, ChevronUp } from 'lucide-react';\nimport { startOfWeek, endOfWeek, add, sub, format, eachDayOfInterval, isToday } from 'date-fns';\nimport { fr, enUS } from 'date-fns/locale';\nimport { MediaItem } from '@/components/catalog/MediaGrid';\nimport ScheduleCard from '@/components/schedule/ScheduleCard';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\nimport { cn } from '@/lib/utils';\nimport { useJellyfin } from '@/contexts/JellyfinContext';\n\nconst SchedulePage = () => {\n  const { t, i18n } = useTranslation();\n  const { error: jellyfinError } = useJellyfin();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [schedule, setSchedule] = useState<Record<string, MediaItem[]>>({});\n  const [loading, setLoading] = useState(true);\n  const [mediaType, setMediaType] = useState<'tv' | 'anime'>('tv');\n  const [openStates, setOpenStates] = useState<Record<string, boolean>>({});\n\n  // Cache pour éviter de recharger les mêmes données\n  const [scheduleCache, setScheduleCache] = useState<Record<string, { data: Record<string, MediaItem[]>, timestamp: number }>>({});\n\n  const currentLocale = i18n.language === 'fr' ? fr : enUS;\n  const ITEMS_PER_DAY_LIMIT = 3;\n  const CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\n\n  const fetchSchedule = useCallback(async () => {\n    setLoading(true);\n    const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 });\n    const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n    // Vérifier le cache\n    const cacheKey = `${mediaType}-${format(weekStart, 'yyyy-MM-dd')}-${format(weekEnd, 'yyyy-MM-dd')}-${i18n.language}`;\n    const cachedData = scheduleCache[cacheKey];\n    \n    if (cachedData && (Date.now() - cachedData.timestamp) < CACHE_DURATION) {\n      setSchedule(cachedData.data);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const { data, error } = await supabase.functions.invoke('get-airing-schedule', {\n        body: {\n          mediaType,\n          language: i18n.language,\n          startDate: format(weekStart, 'yyyy-MM-dd'),\n          endDate: format(weekEnd, 'yyyy-MM-dd'),\n        },\n      });\n      if (error) throw error;\n\n      const tmdbItems = data as MediaItem[];\n\n      // Optimisation 1: Les données de disponibilité sont déjà traitées côté serveur\n      // Plus besoin de vérifications individuelles d'épisodes\n\n      // Optimisation 2: Filtrage optimisé en une seule passe\n      const isAnime = (item: MediaItem) => {\n        const genres = item.genre_ids || [];\n        const hasAnimeGenre = genres.includes(16);\n        const originCountries = item.origin_country || [];\n        const isJapanese = originCountries.includes('JP');\n        return item.media_type === 'anime' || hasAnimeGenre || isJapanese;\n      };\n\n      const filteredItems = tmdbItems.filter(it => {\n        if (mediaType === 'anime') return isAnime(it);\n        if (mediaType === 'tv') return it.media_type === 'tv' && !isAnime(it);\n        return false;\n      });\n\n      // Optimisation 3: Groupement optimisé\n      const groupedByDay = filteredItems.reduce((acc, item) => {\n        const airDate = item.first_air_date ? format(new Date(item.first_air_date), 'yyyy-MM-dd') : '';\n        if (!acc[airDate]) acc[airDate] = [];\n        acc[airDate].push(item);\n        return acc;\n      }, {} as Record<string, MediaItem[]>);\n\n      // Mettre en cache les résultats\n      setScheduleCache(prev => ({\n        ...prev,\n        [cacheKey]: { data: groupedByDay, timestamp: Date.now() }\n      }));\n\n      setSchedule(groupedByDay);\n    } catch (error: any) {\n      showError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [currentDate, mediaType, i18n.language]);\n\n  useEffect(() => {\n    fetchSchedule();\n  }, [fetchSchedule]);\n\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 });\n  const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n  const weekDays = eachDayOfInterval({ start: weekStart, end: weekEnd });\n\n  // Résumé de la semaine : nombre total de sorties\n  const totalReleases = Object.values(schedule).reduce((acc, arr) => acc + arr.length, 0);\n  const daysWithReleases = Object.values(schedule).filter(arr => arr.length > 0).length;\n\n  const goToPreviousWeek = () => setCurrentDate(sub(currentDate, { weeks: 1 }));\n  const goToNextWeek = () => setCurrentDate(add(currentDate, { weeks: 1 }));\n  const goToToday = () => setCurrentDate(new Date());\n\n  if (jellyfinError) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <Card>\n          <CardContent className=\"py-8 text-center\">\n            <div className=\"text-red-500 mb-4\">\n              <h2 className=\"text-2xl font-bold mb-2\">Erreur de configuration</h2>\n              <p>Impossible de charger les paramètres Jellyfin : {jellyfinError}</p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-4xl font-bold tracking-tight mb-6\">{t('schedule')}</h1>\n\n      <Card className=\"mb-8 p-4\">\n        <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"icon\" \n              onClick={goToPreviousWeek}\n              aria-label=\"Semaine précédente\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"icon\" \n              onClick={goToNextWeek}\n              aria-label=\"Semaine suivante\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"default\" onClick={goToToday}>{t('today')}</Button>\n          </div>\n          <div className=\"flex flex-col items-center gap-1\">\n            <h2 className=\"text-xl font-semibold text-center\">\n              {format(weekStart, 'd MMM', { locale: currentLocale })} - {format(weekEnd, 'd MMM yyyy', { locale: currentLocale })}\n            </h2>\n            <span className=\"text-xs text-muted-foreground\">{t('releases_this_week', { count: totalReleases })} • {t('days_with_releases', { count: daysWithReleases })}</span>\n          </div>\n          <Tabs value={mediaType} onValueChange={(value) => setMediaType(value as 'tv' | 'anime')} className=\"w-full sm:w-auto\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"tv\">{t('tv_shows')}</TabsTrigger>\n              <TabsTrigger value=\"anime\">{t('animes')}</TabsTrigger>\n            </TabsList>\n          </Tabs>\n        </div>\n      </Card>\n\n      {loading ? (\n        <div className=\"grid grid-cols-1 lg:grid-cols-7 gap-4\">\n          {[...Array(7)].map((_, i) => (\n            <div key={i} className=\"space-y-3\">\n              <Skeleton className=\"h-8 w-32\" />\n              {[...Array(3)].map((_, j) => <Skeleton key={j} className=\"h-[88px] w-full\" />)}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-7 gap-2\">\n          {weekDays.map(day => {\n            const dayKey = format(day, 'yyyy-MM-dd');\n            const itemsForDay = schedule[dayKey] || [];\n            const initialItems = itemsForDay.slice(0, ITEMS_PER_DAY_LIMIT);\n            const remainingItems = itemsForDay.slice(ITEMS_PER_DAY_LIMIT);\n            const isCurrentDay = isToday(day);\n            const isOpen = openStates[dayKey] || false;\n\n            return (\n              <div key={dayKey} className={cn(\"rounded-lg p-3 transition-colors\", isCurrentDay && \"bg-primary/10\")}>\n                <h3 className={cn(\"text-lg font-bold mb-4 capitalize flex items-center gap-2\", isCurrentDay && \"text-primary\")}>\n                  <Calendar className=\"h-5 w-5\" />\n                  {format(day, 'EEEE d', { locale: currentLocale })}\n                </h3>\n                <div className=\"space-y-2\">\n                  {initialItems.length > 0 ? (\n                    initialItems.map(item => <ScheduleCard key={`${item.id}-${item.first_air_date}`} item={item} currentMediaType={mediaType} />)\n                  ) : (\n                    <div className=\"h-24 flex flex-col items-center justify-center text-center text-muted-foreground bg-muted/30 rounded-md p-2\">\n                      <CalendarOff className=\"h-6 w-6 mb-2\" />\n                      <p className=\"text-xs\">{t('no_releases_on_this_day')}</p>\n                    </div>\n                  )}\n                  {remainingItems.length > 0 && (\n                    <Collapsible open={isOpen} onOpenChange={(open) => setOpenStates(prev => ({...prev, [dayKey]: open}))}>\n                      <CollapsibleContent className=\"space-y-2 animate-in fade-in-0\">\n                        {remainingItems.map(item => <ScheduleCard key={`${item.id}-${item.first_air_date}`} item={item} currentMediaType={mediaType} />)}\n                      </CollapsibleContent>\n                      <CollapsibleTrigger asChild>\n                        <Button variant=\"ghost\" className=\"w-full mt-2\">\n                          {isOpen ? (\n                            <ChevronUp className=\"h-4 w-4 mr-2\" />\n                          ) : (\n                            <ChevronDown className=\"h-4 w-4 mr-2\" />\n                          )}\n                          {isOpen ? t('view_less') : t('view_more', { count: remainingItems.length })}\n                        </Button>\n                      </CollapsibleTrigger>\n                    </Collapsible>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SchedulePage;"],"names":["CalendarOff","createLucideIcon","addMonths","date","amount","_date","toDate","constructFrom","dayOfMonth","endOfDesiredMonth","daysInMonth","add","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","dateWithDays","addDays","minutesToAdd","msToAdd","isSameDay","dateLeft","dateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","eachDayOfInterval","interval","options","startDate","endDate","reversed","endTime","currentDate","step","dates","endOfWeek","defaultOptions","getDefaultOptions","weekStartsOn","_h","_g","_d","_c","_b","_a","_f","_e","day","diff","isToday","constructNow","subMonths","sub","dateWithoutMonths","dateWithoutDays","subDays","minutestoSub","mstoSub","ScheduleCard","item","currentMediaType","useTranslation","title","isAnime","genres","hasAnimeGenre","g","originCountries","isJapanese","shouldShowAnimeRing","jsx","Link","Card","jsxs","Badge","Check","Tooltip","TooltipTrigger","Hourglass","TooltipContent","Collapsible","CollapsiblePrimitive.Root","CollapsibleTrigger","CollapsiblePrimitive.CollapsibleTrigger","CollapsibleContent","CollapsiblePrimitive.CollapsibleContent","SchedulePage","t","i18n","jellyfinError","useJellyfin","setCurrentDate","useState","schedule","setSchedule","loading","setLoading","mediaType","setMediaType","openStates","setOpenStates","scheduleCache","setScheduleCache","currentLocale","fr","enUS","ITEMS_PER_DAY_LIMIT","CACHE_DURATION","fetchSchedule","useCallback","__async","weekStart","startOfWeek","weekEnd","cacheKey","format","cachedData","data","error","supabase","tmdbItems","groupedByDay","it","acc","airDate","prev","__spreadProps","__spreadValues","showError","useEffect","weekDays","totalReleases","arr","daysWithReleases","goToPreviousWeek","goToNextWeek","goToToday","CardContent","Button","ChevronLeft","ChevronRight","Tabs","value","TabsList","TabsTrigger","_","i","Skeleton","j","dayKey","itemsForDay","initialItems","remainingItems","isCurrentDay","isOpen","cn","Calendar","open","ChevronUp","ChevronDown"],"mappings":"i3CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAcC,GAAiB,cAAe,CAClD,CAAC,OAAQ,CAAE,EAAG,iEAAkE,IAAK,QAAQ,CAAE,EAC/F,CAAC,OAAQ,CAAE,EAAG,+BAAgC,IAAK,QAAQ,CAAE,EAC7D,CAAC,OAAQ,CAAE,EAAG,UAAW,IAAK,QAAQ,CAAE,EACxC,CAAC,OAAQ,CAAE,EAAG,UAAW,IAAK,QAAQ,CAAE,EACxC,CAAC,OAAQ,CAAE,EAAG,cAAe,IAAK,QAAQ,CAAE,EAC5C,CAAC,OAAQ,CAAE,EAAG,aAAc,IAAK,QAAQ,CAAE,CAC7C,CAAC,ECWM,SAASC,GAAUC,EAAMC,EAAQ,CACtC,MAAMC,EAAQC,EAAOH,CAAI,EACzB,GAAI,MAAMC,CAAM,EAAG,OAAOG,EAAcJ,EAAM,GAAG,EACjD,GAAI,CAACC,EAEH,OAAOC,EAET,MAAMG,EAAaH,EAAM,QAAO,EAU1BI,EAAoBF,EAAcJ,EAAME,EAAM,QAAO,CAAE,EAC7DI,EAAkB,SAASJ,EAAM,SAAQ,EAAKD,EAAS,EAAG,CAAC,EAC3D,MAAMM,EAAcD,EAAkB,QAAO,EAC7C,OAAID,GAAcE,EAGTD,GASPJ,EAAM,YACJI,EAAkB,YAAW,EAC7BA,EAAkB,SAAQ,EAC1BD,CACN,EACWH,EAEX,CCrBO,SAASM,GAAIR,EAAMS,EAAU,CAClC,KAAM,CACJ,MAAAC,EAAQ,EACR,OAAAC,EAAS,EACT,MAAAC,EAAQ,EACR,KAAAC,EAAO,EACP,MAAAC,EAAQ,EACR,QAAAC,EAAU,EACV,QAAAC,EAAU,CACd,EAAMP,EAGEP,EAAQC,EAAOH,CAAI,EACnBiB,EACJN,GAAUD,EAAQX,GAAUG,EAAOS,EAASD,EAAQ,EAAE,EAAIR,EAGtDgB,EACJL,GAAQD,EAAQO,GAAQF,EAAgBJ,EAAOD,EAAQ,CAAC,EAAIK,EAGxDG,EAAeL,EAAUD,EAAQ,GAEjCO,GADeL,EAAUI,EAAe,IACf,IAG/B,OAFkBhB,EAAcJ,EAAMkB,EAAa,QAAO,EAAKG,CAAO,CAGxE,CCxCO,SAASC,GAAUC,EAAUC,EAAW,CAC7C,MAAMC,EAAqBC,EAAWH,CAAQ,EACxCI,EAAsBD,EAAWF,CAAS,EAEhD,MAAO,CAACC,GAAuB,CAACE,CAClC,CCFO,SAASC,GAAkBC,EAAUC,EAAS,CACnD,MAAMC,EAAY5B,EAAO0B,EAAS,KAAK,EACjCG,EAAU7B,EAAO0B,EAAS,GAAG,EAEnC,IAAII,EAAW,CAACF,EAAY,CAACC,EAC7B,MAAME,EAAUD,EAAW,CAACF,EAAY,CAACC,EACnCG,EAAcF,EAAWD,EAAUD,EACzCI,EAAY,SAAS,EAAG,EAAG,EAAG,CAAC,EAE/B,IAAIC,EAAwB,EAO5B,MAAMC,EAAQ,CAAA,EAEd,KAAO,CAACF,GAAeD,GACrBG,EAAM,KAAKlC,EAAOgC,CAAW,CAAC,EAC9BA,EAAY,QAAQA,EAAY,QAAO,EAAKC,CAAI,EAChDD,EAAY,SAAS,EAAG,EAAG,EAAG,CAAC,EAGjC,OAAOF,EAAWI,EAAM,QAAO,EAAKA,CACtC,CC3BO,SAASC,EAAUtC,EAAM8B,EAAS,qBACvC,MAAMS,EAAiBC,GAAiB,EAClCC,GACJC,GAAAC,GAAAC,GAAAC,EAAAf,GAAA,YAAAA,EAAS,eAAT,KAAAe,GACAC,GAAAC,EAAAjB,GAAA,YAAAA,EAAS,SAAT,YAAAiB,EAAiB,UAAjB,YAAAD,EAA0B,eAD1B,KAAAF,EAEAL,EAAe,eAFf,KAAAI,GAGAK,GAAAC,EAAAV,EAAe,SAAf,YAAAU,EAAuB,UAAvB,YAAAD,EAAgC,eAHhC,KAAAN,EAIA,EAEIxC,EAAQC,EAAOH,CAAI,EACnBkD,EAAMhD,EAAM,OAAM,EAClBiD,GAAQD,EAAMT,EAAe,GAAK,GAAK,GAAKS,EAAMT,GAExD,OAAAvC,EAAM,QAAQA,EAAM,QAAO,EAAKiD,CAAI,EACpCjD,EAAM,SAAS,GAAI,GAAI,GAAI,GAAG,EACvBA,CACT,CC1BO,SAASkD,GAAQpD,EAAM,CAC5B,OAAOsB,GAAUtB,EAAMqD,GAAarD,CAAI,CAAC,CAC3C,CCHO,SAASsD,GAAUtD,EAAMC,EAAQ,CACtC,OAAOF,GAAUC,EAAM,CAACC,CAAM,CAChC,CCoBO,SAASsD,GAAIvD,EAAMS,EAAU,CAClC,KAAM,CACJ,MAAAC,EAAQ,EACR,OAAAC,EAAS,EACT,MAAAC,EAAQ,EACR,KAAAC,EAAO,EACP,MAAAC,EAAQ,EACR,QAAAC,EAAU,EACV,QAAAC,EAAU,CACd,EAAMP,EAGE+C,EAAoBF,GAAUtD,EAAMW,EAASD,EAAQ,EAAE,EAGvD+C,EAAkBC,GAAQF,EAAmB3C,EAAOD,EAAQ,CAAC,EAG7D+C,EAAe5C,EAAUD,EAAQ,GAEjC8C,GADe5C,EAAU2C,EAAe,IACf,IAG/B,OAFkBvD,EAAcJ,EAAMyD,EAAgB,QAAO,EAAKG,CAAO,CAG3E,CCtDA,MAAMC,EAA4C,CAAC,CAAE,KAAAC,EAAM,iBAAAC,KAAuB,CAChF,KAAM,CAAE,CAAA,EAAMC,EAAA,EAEd,IAAIC,EAAQH,EAAK,OAASA,EAAK,KAC1BA,EAAK,eAAiB,QAAaA,EAAK,gBAAkB,QAAcG,IAC3EA,EAAQ,GAAGA,CAAK,OAAO,OAAOH,EAAK,YAAY,EAAE,SAAS,EAAG,GAAG,CAAC,IAAI,OAAOA,EAAK,aAAa,EAAE,SAAS,EAAG,GAAG,CAAC,IAIlH,MAAMI,GAAW,IAAM,CACrB,MAAMC,EAASL,EAAK,WAAaA,EAAK,QAAU,CAAA,EAC1CM,EAAgB,MAAM,QAAQD,CAAM,EACtCA,EAAO,KAAME,GAAO,OAAOA,GAAM,UAAYA,IAAM,IAAQ,OAAOA,GAAM,WAAYA,GAAA,YAAAA,EAAG,MAAO,EAAG,EACjG,GACEC,EAAkBR,EAAK,gBAAkBA,EAAK,kBAAoB,CAAA,EAClES,EAAa,MAAM,QAAQD,CAAe,EAC5CA,EAAgB,SAAS,IAAI,EAC7B,GACJ,OAAOR,EAAK,aAAe,SAAWM,GAAiBG,CACzD,GAAA,EAGMC,EAAsBT,IAAqB,MAAQG,EAEzD,OACEO,EAAAA,IAACC,IAAK,GAAI,UAAUZ,EAAK,UAAU,IAAIA,EAAK,EAAE,GAAI,UAAU,cAC1D,SAAAW,EAAAA,IAACE,EAAA,CAAK,UACJ,2FAA2FH,EAAsB,0BAA4B,EAAE,GAE/I,SAAAI,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACZ,SAAA,CAAAd,EAAK,YACJW,EAAAA,IAAC,MAAA,CACC,IAAK,kCAAkCX,EAAK,WAAW,GACvD,IAAKG,EACL,UAAU,sDACV,QAAQ,MAAA,CAAA,EAGVQ,EAAAA,IAAC,MAAA,CAAI,UAAU,iDAAA,CAAkD,EAEnEG,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAH,EAAAA,IAAC,KAAA,CAAG,UAAU,8DAA+D,SAAAR,EAAM,EAEnFQ,EAAAA,IAAC,MAAA,CAAI,UAAU,iGAIZ,SAAAX,EAAK,YACJc,EAAAA,KAACC,EAAA,CAAM,QAAQ,YAAY,UAAU,yDACnC,SAAA,CAAAJ,EAAAA,IAACK,GAAA,CAAM,UAAU,cAAA,CAAe,EAC/B,EAAE,WAAW,CAAA,CAAA,CAChB,EACEhB,EAAK,OACPc,EAAAA,KAACG,GAAA,CACC,SAAA,CAAAN,EAAAA,IAACO,IACC,SAAAJ,OAACC,EAAA,CAAM,QAAQ,YAAY,UAAU,2DACnC,SAAA,CAAAJ,EAAAA,IAACQ,GAAA,CAAU,UAAU,cAAA,CAAe,EACnC,EAAE,MAAM,CAAA,CAAA,CACX,CAAA,CACF,QACCC,GAAA,CACC,SAAAT,MAAC,KAAG,SAAA,EAAE,gBAAgB,EAAE,CAAA,CAC1B,CAAA,CAAA,CACF,EACE,IAAA,CACN,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,CAEJ,ECnFMU,GAAcC,GAEdC,GAAqBC,GAErBC,GAAqBC,GCWrBC,GAAe,IAAM,CACzB,KAAM,CAAE,EAAAC,EAAG,KAAAC,CAAA,EAAS3B,EAAA,EACd,CAAE,MAAO4B,CAAA,EAAkBC,GAAA,EAC3B,CAAC1D,EAAa2D,CAAc,EAAIC,EAAAA,SAAS,IAAI,IAAM,EACnD,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAsC,CAAA,CAAE,EAClE,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EACrC,CAACK,EAAWC,CAAY,EAAIN,EAAAA,SAAyB,IAAI,EACzD,CAACO,EAAYC,CAAa,EAAIR,EAAAA,SAAkC,CAAA,CAAE,EAGlE,CAACS,EAAeC,CAAgB,EAAIV,EAAAA,SAAmF,CAAA,CAAE,EAEzHW,EAAgBf,EAAK,WAAa,KAAOgB,GAAKC,GAC9CC,EAAsB,EACtBC,GAAiB,IAAS,IAG1BC,EAAgBC,EAAAA,YAAY,IAAYC,EAAA,sBAC5Cd,EAAW,EAAI,EACf,MAAMe,EAAYC,EAAYhF,EAAa,CAAE,aAAc,EAAG,EACxDiF,EAAU9E,EAAUH,EAAa,CAAE,aAAc,EAAG,EAGpDkF,EAAW,GAAGjB,CAAS,IAAIkB,EAAOJ,EAAW,YAAY,CAAC,IAAII,EAAOF,EAAS,YAAY,CAAC,IAAIzB,EAAK,QAAQ,GAC5G4B,EAAaf,EAAca,CAAQ,EAEzC,GAAIE,GAAe,KAAK,IAAA,EAAQA,EAAW,UAAaT,GAAgB,CACtEb,EAAYsB,EAAW,IAAI,EAC3BpB,EAAW,EAAK,EAChB,MACF,CAEA,GAAI,CACF,KAAM,CAAE,KAAAqB,EAAM,MAAAC,CAAA,EAAU,MAAMC,GAAS,UAAU,OAAO,sBAAuB,CAC7E,KAAM,CACJ,UAAAtB,EACA,SAAUT,EAAK,SACf,UAAW2B,EAAOJ,EAAW,YAAY,EACzC,QAASI,EAAOF,EAAS,YAAY,CAAA,CACvC,CACD,EACD,GAAIK,EAAO,MAAMA,EAEjB,MAAME,EAAYH,EAMZtD,EAAWJ,GAAoB,CAEnC,MAAMM,GADSN,EAAK,WAAa,CAAA,GACJ,SAAS,EAAE,EAElCS,IADkBT,EAAK,gBAAkB,CAAA,GACZ,SAAS,IAAI,EAChD,OAAOA,EAAK,aAAe,SAAWM,GAAiBG,EACzD,EASMqD,EAPgBD,EAAU,OAAOE,GACjCzB,IAAc,QAAgBlC,EAAQ2D,CAAE,EACxCzB,IAAc,KAAayB,EAAG,aAAe,MAAQ,CAAC3D,EAAQ2D,CAAE,EAC7D,EACR,EAGkC,OAAO,CAACC,EAAKhE,IAAS,CACvD,MAAMiE,EAAUjE,EAAK,eAAiBwD,EAAO,IAAI,KAAKxD,EAAK,cAAc,EAAG,YAAY,EAAI,GAC5F,OAAKgE,EAAIC,CAAO,IAAGD,EAAIC,CAAO,EAAI,CAAA,GAClCD,EAAIC,CAAO,EAAE,KAAKjE,CAAI,EACfgE,CACT,EAAG,CAAA,CAAiC,EAGpCrB,EAAiBuB,GAASC,EAAAC,EAAA,GACrBF,GADqB,CAExB,CAACX,CAAQ,EAAG,CAAE,KAAMO,EAAc,UAAW,KAAK,IAAA,CAAI,CAAE,EACxD,EAEF3B,EAAY2B,CAAY,CAC1B,OAASH,EAAY,CACnBU,GAAUV,EAAM,OAAO,CACzB,QAAA,CACEtB,EAAW,EAAK,CAClB,CACF,GAAG,CAAChE,EAAaiE,EAAWT,EAAK,QAAQ,CAAC,EAE1CyC,EAAAA,UAAU,IAAM,CACdrB,EAAA,CACF,EAAG,CAACA,CAAa,CAAC,EAElB,MAAMG,EAAYC,EAAYhF,EAAa,CAAE,aAAc,EAAG,EACxDiF,EAAU9E,EAAUH,EAAa,CAAE,aAAc,EAAG,EACpDkG,GAAWzG,GAAkB,CAAE,MAAOsF,EAAW,IAAKE,EAAS,EAG/DkB,GAAgB,OAAO,OAAOtC,CAAQ,EAAE,OAAO,CAAC8B,EAAKS,IAAQT,EAAMS,EAAI,OAAQ,CAAC,EAChFC,GAAmB,OAAO,OAAOxC,CAAQ,EAAE,OAAOuC,GAAOA,EAAI,OAAS,CAAC,EAAE,OAEzEE,GAAmB,IAAM3C,EAAevC,GAAIpB,EAAa,CAAE,MAAO,CAAA,CAAG,CAAC,EACtEuG,GAAe,IAAM5C,EAAetF,GAAI2B,EAAa,CAAE,MAAO,CAAA,CAAG,CAAC,EAClEwG,GAAY,IAAM7C,EAAe,IAAI,IAAM,EAEjD,OAAIF,EAEAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAAA,IAACE,EAAA,CACC,SAAAF,EAAAA,IAACmE,GAAA,CAAY,UAAU,mBACrB,SAAAhE,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAH,EAAAA,IAAC,KAAA,CAAG,UAAU,0BAA0B,SAAA,0BAAuB,SAC9D,IAAA,CAAE,SAAA,CAAA,mDAAiDmB,CAAA,CAAA,CAAc,CAAA,EACpE,CAAA,CACF,EACF,EACF,EAKFhB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAH,MAAC,KAAA,CAAG,UAAU,yCAA0C,SAAAiB,EAAE,UAAU,EAAE,QAErEf,EAAA,CAAK,UAAU,WACd,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,+DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAH,EAAAA,IAACoE,EAAA,CACC,QAAQ,UACR,KAAK,OACL,QAASJ,GACT,aAAW,qBAEX,SAAAhE,EAAAA,IAACqE,GAAA,CAAY,UAAU,SAAA,CAAU,CAAA,CAAA,EAEnCrE,EAAAA,IAACoE,EAAA,CACC,QAAQ,UACR,KAAK,OACL,QAASH,GACT,aAAW,mBAEX,SAAAjE,EAAAA,IAACsE,GAAA,CAAa,UAAU,SAAA,CAAU,CAAA,CAAA,EAEpCtE,MAACoE,GAAO,QAAQ,UAAU,QAASF,GAAY,SAAAjD,EAAE,OAAO,CAAA,CAAE,CAAA,EAC5D,EACAd,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oCACX,SAAA,CAAA0C,EAAOJ,EAAW,QAAS,CAAE,OAAQR,EAAe,EAAE,MAAIY,EAAOF,EAAS,aAAc,CAAE,OAAQV,EAAe,CAAA,EACpH,EACA9B,EAAAA,KAAC,OAAA,CAAK,UAAU,gCAAiC,SAAA,CAAAc,EAAE,qBAAsB,CAAE,MAAO4C,EAAA,CAAe,EAAE,MAAI5C,EAAE,qBAAsB,CAAE,MAAO8C,GAAkB,CAAA,CAAA,CAAE,CAAA,EAC9J,EACA/D,EAAAA,IAACuE,GAAA,CAAK,MAAO5C,EAAW,cAAgB6C,GAAU5C,EAAa4C,CAAuB,EAAG,UAAU,mBACjG,SAAArE,EAAAA,KAACsE,GAAA,CAAS,UAAU,0BAClB,SAAA,CAAAzE,MAAC0E,EAAA,CAAY,MAAM,KAAM,SAAAzD,EAAE,UAAU,EAAE,QACtCyD,EAAA,CAAY,MAAM,QAAS,SAAAzD,EAAE,QAAQ,CAAA,CAAE,CAAA,CAAA,CAC1C,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAECQ,EACCzB,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC2E,EAAGC,IACrBzE,EAAAA,KAAC,MAAA,CAAY,UAAU,YACrB,SAAA,CAAAH,EAAAA,IAAC6E,EAAA,CAAS,UAAU,UAAA,CAAW,EAC9B,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAACF,EAAGG,IAAM9E,EAAAA,IAAC6E,EAAA,CAAiB,UAAU,iBAAA,EAAbC,CAA+B,CAAE,CAAA,CAAA,EAFrEF,CAGV,CACD,EACH,EAEA5E,EAAAA,IAAC,OAAI,UAAU,wCACZ,SAAA4D,GAAS,IAAInF,GAAO,CACnB,MAAMsG,EAASlC,EAAOpE,EAAK,YAAY,EACjCuG,EAAczD,EAASwD,CAAM,GAAK,CAAA,EAClCE,EAAeD,EAAY,MAAM,EAAG5C,CAAmB,EACvD8C,EAAiBF,EAAY,MAAM5C,CAAmB,EACtD+C,EAAexG,GAAQF,CAAG,EAC1B2G,EAASvD,EAAWkD,CAAM,GAAK,GAErC,cACG,MAAA,CAAiB,UAAWM,EAAG,mCAAoCF,GAAgB,eAAe,EACjG,SAAA,CAAAhF,OAAC,MAAG,UAAWkF,EAAG,4DAA6DF,GAAgB,cAAc,EAC3G,SAAA,CAAAnF,EAAAA,IAACsF,GAAA,CAAS,UAAU,SAAA,CAAU,EAC7BzC,EAAOpE,EAAK,SAAU,CAAE,OAAQwD,EAAe,CAAA,EAClD,EACA9B,EAAAA,KAAC,MAAA,CAAI,UAAU,YACZ,SAAA,CAAA8E,EAAa,OAAS,EACrBA,EAAa,OAAYjF,EAAAA,IAACZ,EAAA,CAAuD,KAAAC,EAAY,iBAAkBsC,CAAA,EAAnE,GAAGtC,EAAK,EAAE,IAAIA,EAAK,cAAc,EAA6C,CAAE,EAE5Hc,EAAAA,KAAC,MAAA,CAAI,UAAU,8GACb,SAAA,CAAAH,EAAAA,IAAC5E,GAAA,CAAY,UAAU,cAAA,CAAe,QACrC,IAAA,CAAE,UAAU,UAAW,SAAA6F,EAAE,yBAAyB,CAAA,CAAE,CAAA,EACvD,EAEDiE,EAAe,OAAS,GACvB/E,EAAAA,KAACO,IAAY,KAAM0E,EAAQ,aAAeG,GAASzD,EAAcyB,GAASC,EAAAC,EAAA,GAAIF,GAAJ,CAAU,CAACwB,CAAM,EAAGQ,CAAA,EAAM,EAClG,SAAA,CAAAvF,EAAAA,IAACc,IAAmB,UAAU,iCAC3B,WAAe,IAAIzB,SAASD,EAAA,CAAuD,KAAAC,EAAY,iBAAkBsC,CAAA,EAAnE,GAAGtC,EAAK,EAAE,IAAIA,EAAK,cAAc,EAA6C,CAAE,CAAA,CACjI,EACAW,EAAAA,IAACY,IAAmB,QAAO,GACzB,gBAACwD,EAAA,CAAO,QAAQ,QAAQ,UAAU,cAC/B,SAAA,CAAAgB,EACCpF,EAAAA,IAACwF,IAAU,UAAU,cAAA,CAAe,EAEpCxF,EAAAA,IAACyF,GAAA,CAAY,UAAU,cAAA,CAAe,EAEvCL,EAASnE,EAAE,WAAW,EAAIA,EAAE,YAAa,CAAE,MAAOiE,EAAe,MAAA,CAAQ,CAAA,CAAA,CAC5E,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EA/BQH,CAgCV,CAEJ,CAAC,CAAA,CACH,CAAA,EAEJ,CAEJ","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}