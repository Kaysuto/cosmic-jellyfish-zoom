{"version":3,"file":"Logs-BuXJEsg6.js","sources":["../../src/pages/admin/Logs.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useAuditLogs, AuditLog } from '@/hooks/useAuditLogs';\nimport { useTranslation } from 'react-i18next';\nimport type { TFunction } from 'i18next';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { format, formatDistanceToNow } from 'date-fns';\nimport { fr, enUS } from 'date-fns/locale';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, Info, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { getGravatarURL } from '@/lib/gravatar';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { motion } from 'framer-motion';\n\nconst getActionDescription = (log: AuditLog, t: TFunction): string => {\n  const { action, details } = log;\n  const options = { ...details };\n\n  switch (action) {\n    case 'user_login_success': return String(t('log_desc_user_login_success', options));\n    case 'user_login_failed': return String(t('log_desc_user_login_failed', options));\n    case 'user_logout': return String(t('log_desc_user_logout', options));\n    case 'incident_updated': return String(t('log_desc_incident_updated', options));\n    case 'incident_created': return String(t('log_desc_incident_created', options));\n    case 'incident_deleted': return String(t('log_desc_incident_deleted', options));\n    case 'service_updated': return String(t('log_desc_service_updated', options));\n    case 'service_created': return String(t('log_desc_service_created', options));\n    case 'service_deleted': return String(t('log_desc_service_deleted', options));\n    case 'maintenance_updated': return String(t('log_desc_maintenance_updated', options));\n    case 'maintenance_created': return String(t('log_desc_maintenance_created', options));\n    case 'maintenance_deleted': return String(t('log_desc_maintenance_deleted', options));\n    case 'user_deleted': return String(t('log_desc_user_deleted', options));\n    case 'user_role_changed': return String(t('log_desc_user_role_changed', options));\n    case 'admin_mfa_disabled': return String(t('log_desc_admin_mfa_disabled', options));\n    case 'user_created_by_admin': return String(t('log_desc_user_created_by_admin', options));\n    case 'setting_updated': return String(t('log_desc_setting_updated', options));\n    case 'admin_user_details_updated': return String(t('log_desc_admin_user_details_updated', options));\n    case 'user_profile_updated': return String(t('log_desc_user_profile_updated', options));\n    case 'admin_profile_updated': return String(t('log_desc_admin_profile_updated', options));\n    case 'user_email_change_request': return String(t('log_desc_user_email_change_request', options));\n    case 'user_password_updated': return String(t('log_desc_user_password_updated', options));\n    case 'user_mfa_enabled': return String(t('log_desc_user_mfa_enabled', options));\n    case 'user_mfa_disabled': return String(t('log_desc_user_mfa_disabled', options));\n    default: return String(t('log_desc_unknown_action'));\n  }\n};\n\nconst LogsPage = () => {\n  const { t, i18n } = useTranslation();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const { logs, loading, error, totalCount } = useAuditLogs(currentPage, itemsPerPage);\n  const currentLocale = i18n.language === 'fr' ? fr : enUS;\n\n  const totalPages = Math.ceil(totalCount / itemsPerPage);\n\n  const renderContent = () => {\n    if (loading) {\n      return (\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead><Skeleton className=\"h-5 w-24\" /></TableHead>\n              <TableHead><Skeleton className=\"h-5 w-32\" /></TableHead>\n              <TableHead><Skeleton className=\"h-5 w-48\" /></TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {[...Array(itemsPerPage)].map((_, i) => (\n              <TableRow key={i}>\n                <TableCell><Skeleton className=\"h-5 w-full\" /></TableCell>\n                <TableCell><Skeleton className=\"h-5 w-full\" /></TableCell>\n                <TableCell><Skeleton className=\"h-5 w-full\" /></TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      );\n    }\n\n    if (error) {\n      return (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>{t('error')}</AlertTitle>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      );\n    }\n\n    if (logs.length === 0) {\n      return (\n        <Alert>\n          <Info className=\"h-4 w-4\" />\n          <AlertTitle>{t('no_logs_found_title')}</AlertTitle>\n          <AlertDescription>{t('no_logs_found_desc')}</AlertDescription>\n        </Alert>\n      );\n    }\n\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"w-[200px]\">{t('date')}</TableHead>\n            <TableHead className=\"w-[250px]\">{t('user')}</TableHead>\n            <TableHead>{t('description')}</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {logs.map(log => (\n            <TableRow key={log.id}>\n              <TableCell className=\"text-xs whitespace-nowrap\">\n                <div className=\"font-medium\">{format(new Date(log.created_at), 'd MMM yyyy, HH:mm:ss', { locale: currentLocale })}</div>\n                <div className=\"text-muted-foreground\">{formatDistanceToNow(new Date(log.created_at), { locale: currentLocale, addSuffix: true })}</div>\n              </TableCell>\n              <TableCell>\n                {log.profiles ? (\n                  <div className=\"flex items-center gap-2\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={getGravatarURL(log.profiles.email)} />\n                      <AvatarFallback>{log.profiles.first_name?.[0] || 'U'}</AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <div className=\"font-medium\">{log.profiles.first_name} {log.profiles.last_name}</div>\n                      <div className=\"text-xs text-muted-foreground\">{log.profiles.email}</div>\n                    </div>\n                  </div>\n                ) : (\n                  <span className=\"text-muted-foreground italic\">{t('system')}</span>\n                )}\n              </TableCell>\n              <TableCell>\n                <p className=\"text-sm\">{getActionDescription(log, t)}</p>\n                <Badge variant=\"outline\" className=\"mt-1\">{log.action}</Badge>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\n    >\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('audit_logs_title')}</CardTitle>\n          <CardDescription>{t('audit_logs_desc')}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {renderContent()}\n        </CardContent>\n        {totalCount > 0 && (\n          <div className=\"flex items-center justify-between p-4 border-t\">\n            <div className=\"text-sm text-muted-foreground\">\n              {t('pagination_total', { total: totalCount })}\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm\">{t('items_per_page')}</span>\n                <Select value={itemsPerPage.toString()} onValueChange={(value) => { setItemsPerPage(Number(value)); setCurrentPage(1); }}>\n                  <SelectTrigger className=\"w-[80px]\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {[10, 15, 20, 50, 100].map(size => (\n                      <SelectItem key={size} value={size.toString()}>{size}</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm font-medium\">\n                  {t('page_x_of_y', { x: currentPage, y: totalPages })}\n                </span>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => setCurrentPage(p => p - 1)} disabled={currentPage === 1}>\n                  <ChevronLeft className=\"h-4 w-4\" />\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => setCurrentPage(p => p + 1)} disabled={currentPage === totalPages}>\n                  <ChevronRight className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default LogsPage;"],"names":["getActionDescription","log","t","action","details","options","__spreadValues","LogsPage","i18n","useTranslation","currentPage","setCurrentPage","useState","itemsPerPage","setItemsPerPage","logs","loading","error","totalCount","useAuditLogs","currentLocale","fr","enUS","totalPages","renderContent","Table","jsx","TableHeader","TableRow","TableHead","Skeleton","TableBody","_","i","TableCell","jsxs","Alert","AlertTriangle","AlertTitle","AlertDescription","Info","format","formatDistanceToNow","Avatar","AvatarImage","getGravatarURL","AvatarFallback","_a","Badge","motion","Card","CardHeader","CardTitle","CardDescription","CardContent","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","size","Button","p","ChevronLeft","ChevronRight"],"mappings":"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"}