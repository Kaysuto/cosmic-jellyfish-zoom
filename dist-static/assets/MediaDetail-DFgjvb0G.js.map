{"version":3,"file":"MediaDetail-DFgjvb0G.js","sources":["../../node_modules/lucide-react/dist/esm/icons/captions.js","../../node_modules/lucide-react/dist/esm/icons/mic.js","../../src/components/ui/LazyYouTube.tsx","../../src/pages/MediaDetail.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Captions = createLucideIcon(\"Captions\", [\n  [\"rect\", { width: \"18\", height: \"14\", x: \"3\", y: \"5\", rx: \"2\", ry: \"2\", key: \"12ruh7\" }],\n  [\"path\", { d: \"M7 15h4M15 15h2M7 11h2M13 11h4\", key: \"1ueiar\" }]\n]);\n\nexport { Captions as default };\n//# sourceMappingURL=captions.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Mic = createLucideIcon(\"Mic\", [\n  [\"path\", { d: \"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\", key: \"131961\" }],\n  [\"path\", { d: \"M19 10v2a7 7 0 0 1-14 0v-2\", key: \"1vc78b\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"19\", y2: \"22\", key: \"x3vr5v\" }]\n]);\n\nexport { Mic as default };\n//# sourceMappingURL=mic.js.map\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  videoId: string;\r\n  title?: string;\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * LazyYouTube\r\n * - Affiche une vignette + bouton PLAY.\r\n * - N'injecte l'iframe YouTube (youtube-nocookie) que lorsque l'utilisateur clique.\r\n * - Utiliser pour remplacer les iframes embed directes afin de réduire les requêtes réseau initiales\r\n *   (et donc les erreurs console liées aux scripts publicitaires lorsque l'utilisateur a un adblocker).\r\n */\r\nconst LazyYouTube: React.FC<Props> = ({ videoId, title, className }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const thumbnail = `https://i.ytimg.com/vi/${videoId}/hqdefault.jpg`;\r\n\r\n  return (\r\n    <div className={`relative w-full ${className ?? ''}`}>\r\n      {!loaded ? (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLoaded(true)}\r\n          aria-label={title ? `Play ${title}` : 'Play video'}\r\n          className=\"relative block w-full aspect-video bg-black overflow-hidden rounded-lg\"\r\n        >\r\n          <img src={thumbnail} alt={title ?? 'YouTube video'} className=\"w-full h-full object-cover\" loading=\"lazy\" />\r\n          <div className=\"absolute inset-0 bg-black/40\" />\r\n          <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\r\n            <svg width=\"72\" height=\"72\" viewBox=\"0 0 24 24\" className=\"text-white\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden>\r\n              <path d=\"M8 5v14l11-7z\" fill=\"currentColor\" />\r\n            </svg>\r\n          </div>\r\n        </button>\r\n      ) : (\r\n        <div className=\"w-full aspect-video rounded-lg overflow-hidden\">\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            src={`https://www.youtube-nocookie.com/embed/${videoId}?rel=0&modestbranding=1&playsinline=1&autoplay=1`}\r\n            title={title ?? 'YouTube video'}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            loading=\"lazy\"\r\n            referrerPolicy=\"no-referrer\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LazyYouTube;","import { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useSession } from '@/contexts/AuthContext';\nimport { useJellyfin } from '@/contexts/JellyfinContext';\nimport { showError } from '@/utils/toast';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { ArrowLeft, Calendar, Check, Clock, Film, Loader2, Star, Tv, Play, User, AlertTriangle, ChevronLeft, ChevronRight, Mic, Captions, ChevronsUpDown } from 'lucide-react';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport MediaGrid, { MediaItem } from '@/components/catalog/MediaGrid';\nimport LazyYouTube from '@/components/ui/LazyYouTube';\nimport { motion } from 'framer-motion';\nimport { ScrollArea, ScrollBar } from '@/components/ui/scroll-area';\nimport RequestModal from '@/components/catalog/RequestModal';\nimport { format } from 'date-fns';\nimport { fr, enUS } from 'date-fns/locale';\nimport { FunctionsHttpError } from '@supabase/supabase-js';\n\ninterface MediaDetails {\n  id: number;\n  title?: string;\n  name?: string;\n  overview: string;\n  poster_path: string | null;\n  backdrop_path: string | null;\n  release_date?: string;\n  first_air_date?: string;\n  vote_average: number;\n  genres: { id: number; name: string }[];\n  seasons?: { id: number; name: string; season_number: number }[];\n  number_of_seasons?: number;\n  runtime?: number;\n  episode_run_time?: number[];\n}\n\ninterface Episode {\n  id: number;\n  name: string;\n  overview: string;\n  episode_number: number;\n  still_path: string;\n  vote_average: number;\n  air_date: string;\n  runtime?: number;\n  isAvailable?: boolean;\n}\n\ninterface SeasonDetails {\n  episodes: Episode[];\n}\n\ninterface NextUpEpisode {\n  seasonNumber: number;\n  episodeNumber: number;\n  title: string;\n}\n\ninterface ContinueWatchingInfo {\n  seasonNumber: number;\n  episodeNumber: number;\n  playbackPositionTicks: number;\n  runtimeTicks?: number | null;\n  progress?: number | null;\n}\n\ntype RequestStatus = 'available' | 'pending' | 'approved' | 'rejected' | null;\n\nconst getShortTrackName = (title: string | undefined) => {\n  if (!title) return 'Unknown';\n  return title.split(/[\\(\\-]/)[0].trim();\n};\n\nconst MediaDetailPage = () => {\n  // Accept both old and new route param names. Routes use /media/:mediaType/:tmdbId in App.tsx.\n  const { mediaType: rawType, tmdbId: id } = useParams<{ mediaType: string; tmdbId: string }>();\n  const type = rawType as 'movie' | 'tv' | 'anime';\n  const [searchParams] = useSearchParams();\n  const { t, i18n } = useTranslation();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { session } = useSession();\n  const { error: jellyfinError } = useJellyfin();\n  const [details, setDetails] = useState<MediaDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [requestStatus, setRequestStatus] = useState<RequestStatus>(null);\n  const [selectedSeason, setSelectedSeason] = useState<SeasonDetails | null>(null);\n  const [seasonLoading, setSeasonLoading] = useState(false);\n  const [selectedSeasonNumber, setSelectedSeasonNumber] = useState<number | null>(null);\n  const [videos, setVideos] = useState<any[]>([]);\n  const [similar, setSimilar] = useState<any[]>([]);\n  const [credits, setCredits] = useState<{ cast: any[], crew: any[] }>({ cast: [], crew: [] });\n  const [videoPage, setVideoPage] = useState(1);\n  const [jellyfinId, setJellyfinId] = useState<string | null>(null);\n  const [requestModalOpen, setRequestModalOpen] = useState(false);\n  const [selectedItemForRequest, setSelectedItemForRequest] = useState<MediaItem | null>(null);\n  const [nextUpEpisode, setNextUpEpisode] = useState<NextUpEpisode | null>(null);\n  const [continueWatchingInfo, setContinueWatchingInfo] = useState<ContinueWatchingInfo | null>(null);\n  const [loadingNextUp, setLoadingNextUp] = useState(false);\n  const [audioTracks, setAudioTracks] = useState<any[]>([]);\n  const [subtitleTracks, setSubtitleTracks] = useState<any[]>([]);\n  const [loadingStreams, setLoadingStreams] = useState(false);\n  const [jellyfinConnectionError, setJellyfinConnectionError] = useState<string | null>(null);\n  const [selectedAudio, setSelectedAudio] = useState<string>('auto');\n  const [selectedSubtitle, setSelectedSubtitle] = useState<string>('auto');\n\n\n  const fromSearch = searchParams.get('fromSearch');\n  const currentLocale = i18n.language === 'fr' ? fr : enUS;\n\n  const fetchSeasonDetails = async (seasonNumber: number) => {\n    if (!type || !id) return;\n    setSeasonLoading(true);\n    try {\n      const { data: tmdbSeasonData, error: tmdbError } = await supabase.functions.invoke('get-tv-season-details', {\n        body: { seriesId: id, seasonNumber, language: i18n.language },\n      });\n      if (tmdbError) throw tmdbError;\n\n      let episodesWithAvailability = tmdbSeasonData.episodes;\n\n      if (jellyfinId) {\n        const { data: localEpisodes, error: localError } = await supabase\n          .from('jellyfin_episodes')\n          .select('episode_number')\n          .eq('series_jellyfin_id', jellyfinId)\n          .eq('season_number', seasonNumber);\n\n        if (localError) {\n          console.error(\"Error fetching local episodes\", localError);\n        } else {\n          const availableEpisodeNumbers = new Set(localEpisodes.map(ep => ep.episode_number));\n          episodesWithAvailability = tmdbSeasonData.episodes.map((ep: Episode) => ({\n            ...ep,\n            isAvailable: availableEpisodeNumbers.has(ep.episode_number),\n          }));\n        }\n      }\n\n      setSelectedSeason({ episodes: episodesWithAvailability });\n    } catch (error: any) {\n      showError(error.message);\n    } finally {\n      setSeasonLoading(false);\n    }\n  };\n\n  const fetchRequestStatus = async () => {\n    if (!session?.user || !id || !type) return;\n    const { data: requestData } = await supabase.from('media_requests').select('status').eq('tmdb_id', id).eq('media_type', type).maybeSingle();\n    if (requestData) setRequestStatus(requestData.status as RequestStatus);\n  };\n\n const fetchContinueWatching = useCallback(async () => {\n   if (session?.user) {\n     const { data: continueData, error: continueError } = await supabase.rpc('get_continue_watching', { p_user_id: session.user.id });\n     if (!continueError && continueData) {\n       const seriesProgress = continueData.find((item: any) => item.id === Number(id));\n       if (seriesProgress) {\n         setContinueWatchingInfo({\n           seasonNumber: seriesProgress.season_number,\n           episodeNumber: seriesProgress.episode_number,\n           playbackPositionTicks: seriesProgress.playback_position_ticks,\n           runtimeTicks: seriesProgress.runtime_ticks ?? null,\n           progress: seriesProgress.progress ?? null,\n         });\n       } else {\n         setContinueWatchingInfo(null);\n       }\n     } else if (continueError) {\n       console.error(\"Error fetching continue watching:\", continueError);\n     }\n   }\n }, [session, id]);\n\n const fetchNextUp = useCallback(async (jfId: string) => {\n    try {\n      const { data: nextUpData, error: nextUpError } = await supabase.functions.invoke('get-jellyfin-next-up', { body: { seriesJellyfinId: jfId } });\n      if (nextUpError) {\n        console.error(\"Error fetching next up:\", nextUpError);\n      } else {\n        setNextUpEpisode(nextUpData);\n      }\n    } catch (e) {\n      console.error(\"Exception fetching next up:\", e);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchAllDetails = async () => {\n      if (!type || !id) {\n        setLoading(false);\n        return;\n      }\n\n      setLoading(true);\n      setLoadingNextUp(true);\n      setLoadingStreams(true);\n      setJellyfinConnectionError(null);\n\n      try {\n        const apiMediaType = type === 'anime' ? 'tv' : type;\n\n        const promises = [\n          supabase.functions.invoke('get-media-details', { body: { mediaType: apiMediaType, mediaId: id, language: i18n.language } }),\n          supabase.functions.invoke('get-media-videos', { body: { mediaType: apiMediaType, mediaId: id, language: i18n.language } }),\n          supabase.functions.invoke('get-similar-media', { body: { mediaType: apiMediaType, mediaId: id, language: i18n.language } }),\n          supabase.functions.invoke('get-media-credits', { body: { mediaType: apiMediaType, mediaId: id, language: i18n.language } }),\n          supabase.from('catalog_items').select('jellyfin_id').eq('tmdb_id', Number(id)).eq('media_type', apiMediaType).maybeSingle()\n        ];\n\n        const [detailsResult, videosResult, similarResult, creditsResult, catalogResult] = await Promise.all(promises);\n\n        if (detailsResult.error) throw detailsResult.error;\n        const tmdbDetails = detailsResult.data;\n        setDetails(tmdbDetails);\n\n        if (videosResult.error) console.error('Error fetching videos:', videosResult.error); else setVideos(videosResult.data.results);\n        if (similarResult.error) console.error('Error fetching similar media:', similarResult.error); else setSimilar(similarResult.data);\n        if (creditsResult.error) console.error('Error fetching credits:', creditsResult.error); else setCredits(creditsResult.data);\n\n        if (catalogResult.error) {\n          console.error(\"Error fetching from catalog:\", catalogResult.error);\n        } else if (catalogResult.data?.jellyfin_id) {\n          const jfId = catalogResult.data.jellyfin_id;\n          setJellyfinId(jfId);\n\n          if (apiMediaType === 'movie') {\n            try {\n              const { data: streamsData, error: streamsError } = await supabase.functions.invoke('get-jellyfin-media-streams', { body: { jellyfinId: jfId } });\n              if (streamsError) throw streamsError;\n              setAudioTracks(streamsData.audioTracks || []);\n              setSubtitleTracks(streamsData.subtitleTracks || []);\n            } catch (error: any) {\n              let errorMessage = \"Impossible de se connecter à Jellyfin. Vérifiez que l'URL est correcte et que le serveur est accessible publiquement.\";\n              if (error instanceof FunctionsHttpError) {\n                try {\n                  const errorJson = await error.context.json();\n                  if (errorJson.error) {\n                    errorMessage = errorJson.error;\n                  }\n                } catch (e) { /* ignore */ }\n              }\n              setJellyfinConnectionError(errorMessage);\n              console.error(\"Error fetching media streams:\", error);\n            }\n          } else if (apiMediaType === 'tv') {\n            await fetchNextUp(jfId);\n          }\n        }\n\n        await fetchContinueWatching();\n\n        if (tmdbDetails.seasons?.length > 0) {\n          const initialSeason = tmdbDetails.seasons.find((s: any) => s.season_number > 0) || tmdbDetails.seasons[0];\n          setSelectedSeasonNumber(initialSeason.season_number);\n        }\n      } catch (error: any) {\n        showError(error.message);\n      } finally {\n        setLoading(false);\n        setLoadingNextUp(false);\n        setLoadingStreams(false);\n      }\n    };\n\n    fetchAllDetails();\n  }, [type, id, i18n.language, session, fetchContinueWatching, fetchNextUp]);\n\n  useEffect(() => {\n    if ((type === 'tv' || type === 'anime') && selectedSeasonNumber !== null) {\n      fetchSeasonDetails(selectedSeasonNumber);\n    }\n  }, [selectedSeasonNumber, type, id, i18n.language, jellyfinId]);\n\n  useEffect(() => {\n    const handlePlaybackEvent = () => {\n      fetchContinueWatching();\n      if (jellyfinId) {\n        fetchNextUp(jellyfinId);\n      }\n    };\n\n    const handlePlaybackSaved = (e: any) => {\n      if (Number(id) === e?.detail?.tmdbId) {\n        handlePlaybackEvent();\n      }\n    };\n\n    window.addEventListener('playback-ended', handlePlaybackEvent);\n    window.addEventListener('playback-progress-saved', handlePlaybackSaved);\n    return () => {\n      window.removeEventListener('playback-ended', handlePlaybackEvent);\n      window.removeEventListener('playback-progress-saved', handlePlaybackSaved);\n    };\n  }, [id, jellyfinId, fetchContinueWatching, fetchNextUp]);\n\n  const handleRequest = () => {\n    if (!details || !type) return;\n    const itemToRequest: MediaItem = {\n      id: details.id,\n      title: details.title,\n      name: details.name,\n      poster_path: details.poster_path,\n      media_type: type,\n    };\n    setSelectedItemForRequest(itemToRequest);\n    setRequestModalOpen(true);\n  };\n\n  const handlePlay = (season?: number, episode?: number, startTime?: number) => {\n    if (!type || !id) return;\n    let url = `/media/${type}/${id}/play`;\n    const params = new URLSearchParams();\n    if (season !== undefined && episode !== undefined) {\n      params.append('season', season.toString());\n      params.append('episode', episode.toString());\n    }\n   if (startTime) {\n     params.append('t', startTime.toString());\n   }\n    if (selectedAudio !== 'auto') params.append('audioStreamIndex', selectedAudio);\n    if (selectedSubtitle !== 'auto') params.append('subtitleStreamIndex', selectedSubtitle);\n    \n    const paramString = params.toString();\n    if (paramString) {\n      url += `?${paramString}`;\n    }\n    navigate(url, { state: { from: location.pathname } });\n  };\n\n  const renderActionButton = () => {\n    if (jellyfinConnectionError) {\n      return (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>Erreur de connexion Jellyfin</AlertTitle>\n          <AlertDescription>{jellyfinConnectionError}</AlertDescription>\n        </Alert>\n      );\n    }\n\n    // Si l'utilisateur n'est pas connecté, afficher le bouton de connexion\n    if (!session) {\n      return <Button size=\"lg\" onClick={() => navigate('/login', { state: { from: location } })}><Play className=\"mr-2 h-4 w-4\" /> {t('login_to_watch')}</Button>;\n    }\n\n    if (jellyfinId) {\n      if (type === 'movie') {\n        if (continueWatchingInfo && (continueWatchingInfo.playbackPositionTicks ?? 0) > 0) {\n          const resumeSeconds = Math.floor((continueWatchingInfo.playbackPositionTicks || 0) / 10000000);\n          const resumeMinutes = Math.floor(resumeSeconds / 60);\n          const resumeSecondsOnly = Math.floor(resumeSeconds % 60);\n          const resumeTimeString = `${resumeMinutes}m ${resumeSecondsOnly}s`;\n          const hasRuntime = (continueWatchingInfo.runtimeTicks ?? 0) > 0;\n          const percent = hasRuntime ? Math.min(100, Math.round(((continueWatchingInfo.playbackPositionTicks || 0) / (continueWatchingInfo.runtimeTicks || 1)) * 100)) : (continueWatchingInfo.progress ?? 0);\n          const isNearEnd = hasRuntime ? percent >= 99 : ((continueWatchingInfo.progress ?? 0) >= 99);\n          return (\n            <Button size=\"lg\" onClick={() => handlePlay(undefined, undefined, isNearEnd ? 0 : resumeSeconds)}>\n              <Play className=\"mr-2 h-4 w-4\" /> {isNearEnd ? t('play') : t('resume_at', { time: resumeTimeString })}\n            </Button>\n          );\n        }\n        return <Button size=\"lg\" onClick={() => handlePlay()}><Play className=\"mr-2 h-4 w-4\" /> {t('play')}</Button>;\n      }\n      if (type === 'tv' || type === 'anime') {\n        if (loadingNextUp) {\n          return <Button size=\"lg\" disabled><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> {t('finding_next_episode')}</Button>;\n        }\n\n        if (continueWatchingInfo && continueWatchingInfo.seasonNumber && continueWatchingInfo.episodeNumber) {\n          const resumeTime = (continueWatchingInfo.playbackPositionTicks || 0) / 10000000;\n          const resumeMinutes = Math.floor(resumeTime / 60);\n          const resumeSecondsOnly = Math.floor(resumeTime % 60);\n          const resumeTimeString = `${resumeMinutes}m ${resumeSecondsOnly}s`;\n\n          const isNearEnd = (continueWatchingInfo.progress ?? 0) >= 99;\n\n          if (isNearEnd && nextUpEpisode) {\n            const buttonText = t('play_s_e', { season: String(nextUpEpisode.seasonNumber).padStart(2, '0'), episode: String(nextUpEpisode.episodeNumber).padStart(2, '0') });\n            return <Button size=\"lg\" onClick={() => handlePlay(nextUpEpisode.seasonNumber, nextUpEpisode.episodeNumber)}><Play className=\"mr-2 h-4 w-4\" /> {buttonText}</Button>;\n          }\n\n          return <Button size=\"lg\" onClick={() => handlePlay(continueWatchingInfo.seasonNumber, continueWatchingInfo.episodeNumber, resumeTime)}><Play className=\"mr-2 h-4 w-4\" /> {t('resume_at', { time: resumeTimeString })}</Button>;\n        } else if (nextUpEpisode) {\n          const buttonText = t('play_s_e', { season: String(nextUpEpisode.seasonNumber).padStart(2, '0'), episode: String(nextUpEpisode.episodeNumber).padStart(2, '0') });\n          return <Button size=\"lg\" onClick={() => handlePlay(nextUpEpisode.seasonNumber, nextUpEpisode.episodeNumber)}><Play className=\"mr-2 h-4 w-4\" /> {buttonText}</Button>;\n        }\n        return <Button size=\"lg\" onClick={() => handlePlay(1, 1)}><Play className=\"mr-2 h-4 w-4\" /> {t('play_s01e01')}</Button>;\n      }\n    }\n\n    if (requestStatus === 'pending' || requestStatus === 'approved') {\n      return <Button size=\"lg\" disabled><Check className=\"mr-2 h-4 w-4\" /> {t('requested')}</Button>;\n    }\n    \n    return <Button size=\"lg\" onClick={handleRequest}><Film className=\"mr-2 h-4 w-4\" /> {t('request')}</Button>;\n  };\n\n  if (loading) {\n    return <div className=\"container mx-auto px-4 py-8\"><Skeleton className=\"h-[80vh] w-full\" /></div>;\n  }\n\n  if (!details) {\n    return <div className=\"container mx-auto px-4 py-8 text-center\">{t('no_results_found')}</div>;\n  }\n\n  const title = details.title || details.name;\n  const releaseDate = details.release_date || details.first_air_date;\n  const runtime = type === 'movie' ? details.runtime : details.episode_run_time?.[0];\n  const apiMediaType = type === 'anime' ? 'tv' : type;\n  const youtubeVideos = videos.filter(v => v.site === 'YouTube');\n  const similarWithMediaType = similar.map(item => ({ ...item, media_type: type }));\n\n  const VIDEOS_PER_PAGE = 4;\n  const totalVideoPages = Math.ceil(youtubeVideos.length / VIDEOS_PER_PAGE);\n  const currentVideos = youtubeVideos.slice(\n    (videoPage - 1) * VIDEOS_PER_PAGE,\n    videoPage * VIDEOS_PER_PAGE\n  );\n\n  const backLink = fromSearch ? `/catalog?q=${encodeURIComponent(fromSearch)}` : '/catalog';\n\n  const selectedAudioTrack = audioTracks.find(t => t.Index.toString() === selectedAudio);\n  const selectedSubtitleTrack = subtitleTracks.find(t => t.Index.toString() === selectedSubtitle);\n\n  if (jellyfinError) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <Button asChild variant=\"outline\" className=\"mb-6\">\n          <Link to={backLink}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" /> {t('back_to_catalog')}\n          </Link>\n        </Button>\n        <div className=\"text-red-500 p-4 rounded-lg bg-red-500/10 border border-red-500/20\">\n          <p>Erreur de configuration Jellyfin : {jellyfinError}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"relative -mt-16\">\n        <div className=\"absolute inset-0 h-[60vh] overflow-hidden\">\n          {details.backdrop_path ? (\n            <img src={`https://image.tmdb.org/t/p/original${details.backdrop_path}`} alt=\"\" className=\"w-full h-full object-cover object-center\" />\n          ) : (\n            <div className=\"w-full h-full bg-muted\" />\n          )}\n          <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/80 to-transparent\" />\n        </div>\n        <div className=\"relative container mx-auto px-4 pt-[40vh] pb-16\">\n          <div className=\"md:flex gap-8\">\n            <motion.div \n              className=\"w-full md:w-1/3 lg:w-1/4 -mt-24 flex-shrink-0\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.8, ease: \"easeInOut\" }}\n            >\n              {details.poster_path ? (\n                <img src={`https://image.tmdb.org/t/p/w500${details.poster_path}`} alt={title} className=\"w-full rounded-lg shadow-2xl\" />\n              ) : (\n                <div className=\"w-full aspect-[2/3] bg-muted rounded-lg shadow-2xl flex items-center justify-center text-muted-foreground\">\n                  <Film className=\"h-24 w-24\" />\n                </div>\n              )}\n            </motion.div>\n            <motion.div \n              className=\"mt-8 md:mt-0 flex-grow\"\n              initial={{ opacity: 0, y: 15 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.2, ease: \"easeInOut\" }}\n            >\n              <Button asChild variant=\"outline\" className=\"mb-6\">\n                <Link to={backLink}>\n                  <ArrowLeft className=\"mr-2 h-4 w-4\" /> {t('back_to_catalog')}\n                </Link>\n              </Button>\n              <h1 className=\"text-5xl font-bold\">{title}</h1>\n              <div className=\"flex items-center flex-wrap gap-x-4 gap-y-2 mt-2 text-muted-foreground\">\n                {releaseDate && <span className=\"flex items-center gap-1.5\"><Calendar className=\"h-4 w-4\" /> {new Date(releaseDate).getFullYear()}</span>}\n                <span className=\"flex items-center gap-1.5\"><Star className=\"h-4 w-4 text-yellow-400\" /> {details.vote_average.toFixed(1)} / 10</span>\n                {runtime && <span className=\"flex items-center gap-1.5\"><Clock className=\"h-4 w-4\" /> {runtime} min</span>}\n                {apiMediaType === 'tv' && details.number_of_seasons && <span className=\"flex items-center gap-1.5\"><Tv className=\"h-4 w-4\" /> {details.number_of_seasons} {t('seasons', { count: details.number_of_seasons })}</span>}\n              </div>\n              <div className=\"flex flex-wrap gap-2 mt-4\">\n                {details.genres.map(genre => <Badge key={genre.id} variant=\"secondary\">{genre.name}</Badge>)}\n              </div>\n              <p className=\"mt-6 text-lg text-muted-foreground\">{details.overview}</p>\n              <div className=\"mt-8 flex flex-wrap items-center gap-4\">\n                {renderActionButton()}\n                {session && jellyfinId && !loadingStreams && !jellyfinConnectionError && (\n                  <div className=\"flex flex-wrap items-center gap-2\">\n                    {audioTracks.length > 1 && (\n                      <DropdownMenu modal={false}>\n                        <DropdownMenuTrigger asChild>\n                          <Button variant=\"outline\" className=\"w-[180px] justify-between\">\n                            <div className=\"flex items-center gap-2 truncate\">\n                              <Mic className=\"h-4 w-4 flex-shrink-0\" />\n                              <span className=\"truncate\">\n                                {selectedAudioTrack ? getShortTrackName(selectedAudioTrack.DisplayTitle) : 'Audio (Auto)'}\n                              </span>\n                            </div>\n                            <ChevronsUpDown className=\"h-4 w-4 opacity-50 flex-shrink-0\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent className=\"w-[180px]\">\n                          <DropdownMenuItem onSelect={() => setSelectedAudio('auto')}>Audio (Auto)</DropdownMenuItem>\n                          {audioTracks.map(track => (\n                            <DropdownMenuItem key={track.Index} onSelect={() => setSelectedAudio(track.Index.toString())}>\n                              {track.DisplayTitle}\n                            </DropdownMenuItem>\n                          ))}\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    )}\n                    {subtitleTracks.length > 0 && (\n                      <DropdownMenu modal={false}>\n                        <DropdownMenuTrigger asChild>\n                          <Button variant=\"outline\" className=\"w-[180px] justify-between\">\n                            <div className=\"flex items-center gap-2 truncate\">\n                              <Captions className=\"h-4 w-4 flex-shrink-0\" />\n                              <span className=\"truncate\">\n                                {selectedSubtitleTrack ? getShortTrackName(selectedSubtitleTrack.DisplayTitle) : 'Sous-titres (Aucun)'}\n                              </span>\n                            </div>\n                            <ChevronsUpDown className=\"h-4 w-4 opacity-50 flex-shrink-0\" />\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent className=\"w-[180px]\">\n                          <DropdownMenuItem onSelect={() => setSelectedSubtitle('auto')}>Sous-titres (Aucun)</DropdownMenuItem>\n                          {subtitleTracks.map(track => (\n                            <DropdownMenuItem key={track.Index} onSelect={() => setSelectedSubtitle(track.Index.toString())}>\n                              {track.DisplayTitle}\n                            </DropdownMenuItem>\n                          ))}\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    )}\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          </div>\n\n          <div className=\"mt-12\">\n            <Tabs defaultValue={apiMediaType === 'tv' ? 'episodes' : 'videos'} className=\"w-full\">\n              <ScrollArea className=\"w-full whitespace-nowrap\">\n                <TabsList className=\"inline-flex w-max\">\n                  {apiMediaType === 'tv' && <TabsTrigger value=\"episodes\">{t('episodes')}</TabsTrigger>}\n                  <TabsTrigger value=\"videos\">{t('videos_and_trailers')}</TabsTrigger>\n                  <TabsTrigger value=\"similar\">{t('similar_content')}</TabsTrigger>\n                  <TabsTrigger value=\"cast\">{t('cast_and_production')}</TabsTrigger>\n                </TabsList>\n                <ScrollBar orientation=\"horizontal\" className=\"invisible\" />\n              </ScrollArea>\n\n              {apiMediaType === 'tv' && (\n                <TabsContent value=\"episodes\" className=\"mt-6\">\n                  <Alert variant=\"destructive\" className=\"my-6 bg-red-900/30 border-red-500/30 text-red-300\">\n                    <AlertTriangle className=\"h-4 w-4\" />\n                    <AlertTitle>{t('tmdb_disclaimer_title')}</AlertTitle>\n                    <AlertDescription>{t('tmdb_disclaimer_content')}</AlertDescription>\n                  </Alert>\n                  <div className=\"flex items-center gap-4 mb-6\">\n                    <DropdownMenu modal={false}>\n                      <DropdownMenuTrigger asChild>\n                        <Button variant=\"outline\" className=\"w-[250px] justify-between\">\n                          {details.seasons?.find(s => s.season_number === selectedSeasonNumber)?.name || \"Sélectionner une saison\"}\n                          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent className=\"w-[250px]\">\n                        {details.seasons?.map(season => (\n                          <DropdownMenuItem key={season.id} onSelect={() => setSelectedSeasonNumber(season.season_number)}>\n                            {season.name}\n                          </DropdownMenuItem>\n                        ))}\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </div>\n                  {seasonLoading ? (\n                    <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\n                      {[...Array(10)].map((_, i) => (\n                        <div key={i} className=\"space-y-2\">\n                          <Skeleton className=\"aspect-video w-full\" />\n                          <Skeleton className=\"h-4 w-3/4\" />\n                          <Skeleton className=\"h-4 w-1/2\" />\n                        </div>\n                      ))}\n                    </div>\n                  ) : selectedSeason && (\n                    <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\n                      {selectedSeason.episodes.map(episode => (\n                        <Card key={episode.id} className=\"overflow-hidden transition-transform hover:scale-105 group\">\n                          <div className=\"relative aspect-video bg-muted\">\n                            {episode.still_path ? (\n                              <img src={`https://image.tmdb.org/t/p/w500${episode.still_path}`} alt={episode.name} className=\"w-full h-full object-cover\" />\n                            ) : (\n                              <div className=\"w-full h-full flex items-center justify-center text-muted-foreground\">\n                                <Tv className=\"h-8 w-8\" />\n                              </div>\n                            )}\n                            {episode.isAvailable && (\n                              <button\n                                onClick={() => handlePlay(selectedSeasonNumber!, episode.episode_number)}\n                                className=\"absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity\"\n                              >\n                                <Play className=\"h-10 w-10 text-white\" />\n                              </button>\n                            )}\n                          </div>\n                          <CardContent className=\"p-3\">\n                            <p className=\"text-xs text-muted-foreground\">Épisode {episode.episode_number}</p>\n                            <h4 className=\"font-semibold text-sm truncate\">{episode.name}</h4>\n                            {episode.air_date && (\n                              <p className=\"text-xs text-muted-foreground\">{format(new Date(episode.air_date), 'd MMM yyyy', { locale: currentLocale })}</p>\n                            )}\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  )}\n                </TabsContent>\n              )}\n\n              <TabsContent value=\"videos\" className=\"mt-6\">\n                {youtubeVideos.length > 0 ? (\n                  <div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      {currentVideos.map(video => (\n                        <div key={video.id}>\n                          <div className=\"aspect-video mb-2\">\n                            <LazyYouTube videoId={video.key} title={video.name} className=\"rounded-lg\" />\n                          </div>\n                          <h4 className=\"font-semibold\">{video.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">{video.type}</p>\n                        </div>\n                      ))}\n                    </div>\n                    {totalVideoPages > 1 && (\n                      <div className=\"flex items-center justify-center gap-4 mt-6\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => setVideoPage(p => p - 1)}\n                          disabled={videoPage === 1}\n                        >\n                          <ChevronLeft className=\"h-4 w-4 mr-1\" />\n                          {t('previous')}\n                        </Button>\n                        <span className=\"text-sm text-muted-foreground\">\n                          {t('page')} {videoPage} / {totalVideoPages}\n                        </span>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => setVideoPage(p => p + 1)}\n                          disabled={videoPage === totalVideoPages}\n                        >\n                          {t('next')}\n                          <ChevronRight className=\"h-4 w-4 ml-1\" />\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <p>{t('no_trailer_available')}</p>\n                )}\n              </TabsContent>\n              <TabsContent value=\"similar\" className=\"mt-6\">\n                {similarWithMediaType.length > 0 ? <MediaGrid items={similarWithMediaType} showRequestButton={!!session} /> : <p>{t('no_similar_content')}</p>}\n              </TabsContent>\n              <TabsContent value=\"cast\" className=\"mt-6\">\n                <h3 className=\"text-2xl font-bold mb-4\">{t('cast')}</h3>\n                {credits.cast.length > 0 ? (\n                  <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n                    {credits.cast.slice(0, 18).map((person) => (\n                      <Link to={`/person/${person.id}`} key={person.id} className=\"text-left\">\n                        <Card className=\"text-center overflow-hidden bg-muted/20 border-border h-full transition-transform hover:scale-105\">\n                          {person.profile_path ? <img src={`https://image.tmdb.org/t/p/w185${person.profile_path}`} alt={person.name} className=\"w-full h-auto object-cover aspect-[2/3]\" /> : <div className=\"w-full aspect-[2/3] flex items-center justify-center bg-muted text-muted-foreground\"><User className=\"h-12 w-12\" /></div>}\n                          <CardContent className=\"p-2\">\n                            <p className=\"font-bold text-sm truncate\">{person.name}</p>\n                            <p className=\"text-xs text-muted-foreground truncate\">{person.character}</p>\n                          </CardContent>\n                        </Card>\n                      </Link>\n                    ))}\n                  </div>\n                ) : <p>{t('no_cast_info')}</p>}\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n      <RequestModal open={requestModalOpen} onOpenChange={setRequestModalOpen} item={selectedItemForRequest} onSuccess={fetchRequestStatus} />\n    </>\n  );\n};\n\nexport default MediaDetailPage;"],"names":["Captions","createLucideIcon","Mic","LazyYouTube","videoId","title","className","loaded","setLoaded","useState","thumbnail","jsx","jsxs","getShortTrackName","MediaDetailPage","rawType","id","useParams","type","searchParams","useSearchParams","t","i18n","useTranslation","navigate","useNavigate","location","useLocation","session","useSession","jellyfinError","useJellyfin","details","setDetails","loading","setLoading","requestStatus","setRequestStatus","selectedSeason","setSelectedSeason","seasonLoading","setSeasonLoading","selectedSeasonNumber","setSelectedSeasonNumber","videos","setVideos","similar","setSimilar","credits","setCredits","videoPage","setVideoPage","jellyfinId","setJellyfinId","requestModalOpen","setRequestModalOpen","selectedItemForRequest","setSelectedItemForRequest","nextUpEpisode","setNextUpEpisode","continueWatchingInfo","setContinueWatchingInfo","loadingNextUp","setLoadingNextUp","audioTracks","setAudioTracks","subtitleTracks","setSubtitleTracks","loadingStreams","setLoadingStreams","jellyfinConnectionError","setJellyfinConnectionError","selectedAudio","setSelectedAudio","selectedSubtitle","setSelectedSubtitle","fromSearch","currentLocale","fr","enUS","fetchSeasonDetails","seasonNumber","__async","tmdbSeasonData","tmdbError","supabase","episodesWithAvailability","localEpisodes","localError","availableEpisodeNumbers","ep","__spreadProps","__spreadValues","error","showError","fetchRequestStatus","requestData","fetchContinueWatching","useCallback","continueData","continueError","seriesProgress","item","_a","_b","fetchNextUp","jfId","nextUpData","nextUpError","e","useEffect","apiMediaType","promises","detailsResult","videosResult","similarResult","creditsResult","catalogResult","tmdbDetails","streamsData","streamsError","errorMessage","FunctionsHttpError","errorJson","initialSeason","s","handlePlaybackEvent","handlePlaybackSaved","handleRequest","itemToRequest","handlePlay","season","episode","startTime","url","params","paramString","renderActionButton","Alert","AlertTriangle","AlertTitle","AlertDescription","Button","Play","resumeSeconds","resumeMinutes","resumeSecondsOnly","resumeTimeString","hasRuntime","percent","_c","isNearEnd","_d","Loader2","resumeTime","_e","buttonText","Check","Film","Skeleton","releaseDate","runtime","youtubeVideos","v","similarWithMediaType","VIDEOS_PER_PAGE","totalVideoPages","currentVideos","backLink","selectedAudioTrack","selectedSubtitleTrack","Link","ArrowLeft","Fragment","motion","Calendar","Star","Clock","Tv","genre","Badge","DropdownMenu","DropdownMenuTrigger","ChevronsUpDown","DropdownMenuContent","DropdownMenuItem","track","Tabs","ScrollArea","TabsList","TabsTrigger","ScrollBar","TabsContent","_","i","Card","CardContent","format","video","p","ChevronLeft","ChevronRight","MediaGrid","person","User","RequestModal"],"mappings":"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","x_google_ignoreList":[0,1]}