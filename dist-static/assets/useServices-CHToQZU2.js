var f=(e,l,o)=>new Promise((u,a)=>{var m=t=>{try{n(o.next(t))}catch(i){a(i)}},p=t=>{try{n(o.throw(t))}catch(i){a(i)}},n=t=>t.done?u(t.value):Promise.resolve(t.value).then(m,p);n((o=o.apply(e,l)).next())});import{r}from"./router-42GXI50n.js";import{s as v}from"./index-Cw6WSGfP.js";const b=()=>{const[e,l]=r.useState([]),[o,u]=r.useState(!0),a=r.useCallback(()=>f(null,null,function*(){u(!0);const{data:s,error:c}=yield v.from("services").select("*").order("position");c?(console.error("Erreur lors de la récupération des services:",c),l([])):l(s||[]),u(!1)}),[]);r.useEffect(()=>{a();const s=d=>{console.log("Realtime update received:",d),a()},c=v.channel("services-changes").on("postgres_changes",{event:"*",schema:"public",table:"services"},s).subscribe();return()=>{v.removeChannel(c)}},[a]);const m=r.useCallback(()=>{a()},[a]),p=r.useMemo(()=>e.filter(s=>s.status==="operational"),[e]),n=r.useMemo(()=>e.filter(s=>s.status==="downtime"||s.status==="degraded"),[e]),t=r.useMemo(()=>e.filter(s=>s.status==="maintenance"),[e]),i=r.useMemo(()=>{if(e.length===0)return 0;const s=e.reduce((c,d)=>c+d.uptime_percentage,0);return Math.round(s/e.length)},[e]);return{services:e,loading:o,refreshServices:m,operationalServices:p,problematicServices:n,maintenanceServices:t,averageUptime:i}};export{b as u};
//# sourceMappingURL=useServices-CHToQZU2.js.map
