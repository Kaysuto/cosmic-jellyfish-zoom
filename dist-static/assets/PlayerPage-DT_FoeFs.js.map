{"version":3,"file":"PlayerPage-DT_FoeFs.js","sources":["../../src/components/media/VideoPlayer.tsx","../../src/pages/PlayerPage.tsx"],"sourcesContent":["import 'vidstack/styles/defaults.css';\nimport 'vidstack/styles/community-skin/video.css';\n\nimport { \n  MediaPlayer, \n  MediaOutlet, \n  MediaCommunitySkin\n} from '@vidstack/react';\nimport { TextTrack } from 'vidstack';\nimport type { \n  MediaPlayerElement,\n  MediaCanPlayEvent,\n  MediaErrorEvent,\n  MediaTimeUpdateEvent,\n MediaDurationChangeEvent,\n MediaLoadedMetadataEvent,\n MediaEndedEvent,\n} from 'vidstack';\nimport { showError } from '@/utils/toast';\nimport { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft } from 'lucide-react';\n\ninterface VideoPlayerProps {\n  src: string;\n  title: string;\n  container?: string | null;\n  chapters?: any[] | null;\n  audioTracks?: any[];\n  subtitleTracks?: any[];\n  startTime?: number | null;\n  onTimeUpdate?: (time: number) => void;\n  onDurationChange?: (duration: number) => void;\n  selectedSubtitleIndex?: string | null;\n  onBack: () => void;\n}\n\nconst VideoPlayer = ({ src, title, container, chapters, subtitleTracks, startTime, onTimeUpdate, onDurationChange, selectedSubtitleIndex, onBack }: VideoPlayerProps) => {\n  const player = useRef<MediaPlayerElement>(null);\n  const { t } = useTranslation();\n\n  const onLoadedMetadata = (_event: MediaLoadedMetadataEvent) => {\n    const playerRef = player.current as any;\n    if (!playerRef) return;\n\n    // Add Chapters (with fallbacks and title normalization)\n    const existingTracks = playerRef.textTracks.getByKind('chapters');\n    for (const track of existingTracks) playerRef.textTracks.remove(track);\n    const chapterTrack = new TextTrack({ kind: 'chapters', default: true, label: 'Chapters' });\n\n    const hasProvidedChapters = Array.isArray(chapters) && chapters.length > 0;\n    if (hasProvidedChapters) {\n      for (let i = 0; i < chapters.length; i++) {\n        const chapter = chapters[i];\n        const nextChapter = chapters[i + 1];\n        const startTime = Number(chapter?.StartPositionTicks || 0) / 10000000;\n        const endTime = nextChapter ? (Number(nextChapter?.StartPositionTicks || 0) / 10000000) : playerRef.duration;\n        if (isNaN(startTime) || isNaN(endTime) || startTime >= endTime) continue;\n        const label = (chapter?.Name && String(chapter.Name).trim().length > 0) ? String(chapter.Name) : `Chapitre ${i + 1}`;\n        chapterTrack.addCue(new window.VTTCue(startTime, endTime, label));\n      }\n    } else if (!isNaN(playerRef.duration) && playerRef.duration > 0) {\n      // Fallback synthetic chapters when none are provided\n      const d = playerRef.duration;\n      const cueDefs = [\n        { s: 0, e: Math.min(d * 0.5, d), label: 'Début' },\n        { s: Math.min(d * 0.5, d - 1), e: Math.min(d * 0.9, d), label: 'Milieu' },\n        { s: Math.min(d * 0.9, d - 1), e: d, label: 'Générique' },\n      ];\n      for (const c of cueDefs) {\n        if (!isNaN(c.s) && !isNaN(c.e) && c.s < c.e) {\n          chapterTrack.addCue(new window.VTTCue(c.s, c.e, c.label));\n        }\n      }\n    }\n    if (chapterTrack.cues.length > 0) {\n      playerRef.textTracks.add(chapterTrack);\n    }\n\n    // Add Subtitles\n    if (subtitleTracks && subtitleTracks.length > 0) {\n      for (const sub of subtitleTracks) {\n        const isSelected = selectedSubtitleIndex ? sub.Index.toString() === selectedSubtitleIndex : false;\n        const track = new TextTrack({\n          src: sub.src,\n          kind: 'subtitles',\n          label: sub.DisplayTitle,\n          language: sub.Language,\n          default: isSelected,\n        });\n        playerRef.textTracks.add(track);\n      }\n    }\n\n    // Ensure resume position is applied as soon as metadata is ready\n    if (typeof startTime === 'number' && !isNaN(startTime) && startTime > 0) {\n      try {\n        playerRef.currentTime = startTime;\n      } catch {}\n    }\n  };\n\n  if (!src) return null;\n\n  const source = { src, type: container ? `video/${container.toLowerCase()}` : undefined };\n\n  function onCanPlay(_event: MediaCanPlayEvent) {\n    if (player.current && typeof startTime === 'number' && !isNaN(startTime)) {\n      const current = (player.current as any).currentTime;\n      if (Math.abs(current - startTime) > 0.5) {\n        (player.current as any).currentTime = startTime;\n      }\n    }\n  }\n\n  function onError(_event: MediaErrorEvent) {\n    const detail = (_event as any).detail;\n    showError(`Erreur lecteur vidéo: ${detail.message}`);\n  }\n\n  function onTimeUpdateEvent(_event: MediaTimeUpdateEvent) {\n    if (onTimeUpdate) onTimeUpdate((_event as any).detail.currentTime);\n  }\n\n  function onDurationChangeEvent(_event: MediaDurationChangeEvent) {\n    if (onDurationChange) onDurationChange((_event as any).detail.duration);\n  }\n function onEnded(_event: MediaEndedEvent) {\n   window.dispatchEvent(new CustomEvent('playback-ended'));\n }\n\n  return (\n    <MediaPlayer\n      key={src}\n      ref={player}\n      className=\"w-full max-h-screen group\"\n      title={title}\n      src={source}\n      playsInline\n      autoPlay\n      load=\"eager\"\n      crossOrigin\n      onCanPlay={onCanPlay}\n      onError={onError}\n      onTimeUpdate={onTimeUpdateEvent}\n      onDurationChange={onDurationChangeEvent}\n      onLoadedMetadata={onLoadedMetadata}\n     onEnded={onEnded}\n      aspectRatio={16 / 9}\n    >\n      <MediaOutlet />\n      <MediaCommunitySkin />\n      <Button\n        variant=\"ghost\"\n        size=\"icon\"\n        onClick={onBack}\n        className=\"absolute top-4 left-4 z-20 text-white bg-black/50 hover:bg-black/75 hover:text-white rounded-full transition-opacity opacity-0 group-hover:opacity-100 focus:opacity-100\"\n        aria-label={t('back')}\n      >\n        <ArrowLeft className=\"h-5 w-5\" />\n      </Button>\n    </MediaPlayer>\n  );\n};\n\nexport default VideoPlayer;","import { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate, useSearchParams, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { supabase } from '@/integrations/supabase/client';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { AlertTriangle } from 'lucide-react';\nimport VideoPlayer from '@/components/media/VideoPlayer';\nimport { logger } from '@/lib/utils';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { useSession } from '@/contexts/AuthContext';\nimport { FunctionsHttpError } from '@supabase/supabase-js';\nimport { useJellyfin } from '@/contexts/JellyfinContext';\n\nconst PlayerPage = () => {\n  const { mediaType: type, tmdbId: id } = useParams<{ mediaType: string; tmdbId: string}>();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation();\n  const { session } = useSession();\n  const { error: jellyfinError } = useJellyfin();\n  const [searchParams] = useSearchParams();\n  const startTime = searchParams.get('t');\n  const audioStreamIndex = searchParams.get('audioStreamIndex');\n  const subtitleStreamIndex = searchParams.get('subtitleStreamIndex');\n\n  const [streamUrl, setStreamUrl] = useState<string | null>(null);\n  const [container, setContainer] = useState<string | null>(null);\n  const [chapters, setChapters] = useState<any[] | null>(null);\n  const [audioTracks, setAudioTracks] = useState<any[]>([]);\n  const [subtitleTracks, setSubtitleTracks] = useState<any[]>([]);\n  const [mediaTitle, setMediaTitle] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [duration, setDuration] = useState(0);\n  const [currentEpisode, setCurrentEpisode] = useState<{ season: number; episode: number } | null>(null);\n  \n  const currentTimeRef = useRef(0);\n  const hasSavedOnUnmount = useRef(false);\n\n  const updateProgress = useCallback(async (time: number) => {\n    if (!session?.user || !id || !type || duration === 0) return;\n    logger.debug(`Updating progress for ${type} ${id} at time ${time}`, { episode: currentEpisode });\n\n    const record: any = {\n      user_id: session.user.id,\n      tmdb_id: Number(id),\n      media_type: type,\n      progress_seconds: Math.round(time),\n      total_seconds: Math.round(duration),\n      updated_at: new Date().toISOString(),\n    };\n\n    if (type === 'tv' || type === 'anime') {\n      if (currentEpisode) {\n        record.season_number = currentEpisode.season;\n        record.episode_number = currentEpisode.episode;\n      } else {\n        return;\n      }\n    }\n\n    try {\n      const { error: upsertError } = await supabase.from('playback_progress').upsert(record, {\n        onConflict: 'user_id,tmdb_id,media_type,season_number,episode_number',\n      });\n\n      if (upsertError) {\n        logger.error('Error upserting playback_progress:', upsertError);\n      } else {\n        try {\n          window.dispatchEvent(new CustomEvent('playback-progress-saved', {\n            detail: {\n              tmdbId: Number(id),\n              mediaType: type,\n              season: record.season_number ?? null,\n              episode: record.episode_number ?? null,\n              time: record.progress_seconds\n            }\n          }));\n          logger.debug('Dispatched playback-progress-saved event', { tmdbId: Number(id), mediaType: type, season: record.season_number, episode: record.episode_number });\n        } catch (dispatchErr) {\n          logger.error('Failed to dispatch playback-progress-saved event', dispatchErr);\n        }\n      }\n    } catch (err) {\n      logger.error('Exception while updating progress:', err);\n    }\n  }, [session, id, type, duration, currentEpisode]);\n\n  const debouncedUpdateProgress = useCallback(\n    debounce(updateProgress, 5000),\n    [updateProgress]\n  );\n \n  useEffect(() => {\n    const saveFinalProgress = () => {\n      if (currentTimeRef.current > 0 && !hasSavedOnUnmount.current) {\n        updateProgress(currentTimeRef.current);\n        hasSavedOnUnmount.current = true;\n      }\n    };\n \n    const handleBeforeUnload = (_event: BeforeUnloadEvent) => {\n      saveFinalProgress();\n    };\n \n    window.addEventListener('beforeunload', handleBeforeUnload);\n \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      saveFinalProgress();\n    };\n  }, [updateProgress]);\n \n  useEffect(() => {\n    const handlePlaybackEnded = async () => {\n      try {\n        if (currentTimeRef.current > 0) {\n          await updateProgress(currentTimeRef.current);\n        }\n\n        if ((type === 'tv' || type === 'anime') && id) {\n          try {\n            const apiMediaType = 'tv';\n            const { data: catalogItem, error: catalogError } = await supabase\n              .from('catalog_items')\n              .select('jellyfin_id')\n              .eq('tmdb_id', Number(id))\n              .eq('media_type', apiMediaType)\n              .single();\n\n            if (!catalogError && catalogItem?.jellyfin_id) {\n              const { data: nextUpData, error: nextUpError } = await supabase.functions.invoke('get-jellyfin-next-up', {\n                body: { seriesJellyfinId: catalogItem.jellyfin_id },\n              });\n\n              if (!nextUpError && nextUpData?.seasonNumber && nextUpData?.episodeNumber) {\n                const params = new URLSearchParams();\n                params.set('season', String(nextUpData.seasonNumber));\n                params.set('episode', String(nextUpData.episodeNumber));\n                if (audioStreamIndex) params.set('audioStreamIndex', audioStreamIndex);\n                if (subtitleStreamIndex) params.set('subtitleStreamIndex', subtitleStreamIndex);\n                navigate(`/media/${type}/${id}/play?${params.toString()}`, { replace: true, state: { from: location.state?.from || -1 } });\n              }\n            }\n          } catch (e) {\n            // Ignorer si la navigation échoue\n          }\n        }\n      } catch (err) {\n        logger.error('Error saving progress on playback-ended:', err);\n      }\n    };\n \n    window.addEventListener('playback-ended', handlePlaybackEnded);\n    return () => {\n      window.removeEventListener('playback-ended', handlePlaybackEnded);\n    };\n  }, [type, id, navigate, audioStreamIndex, subtitleStreamIndex, location.state, updateProgress]);\n\n  const handleTimeUpdate = (time: number) => {\n    currentTimeRef.current = time;\n    debouncedUpdateProgress(time);\n  };\n\n  const handleDurationChange = (newDuration: number) => {\n    setDuration(newDuration);\n  };\n\n  useEffect(() => {\n    const fetchStreamUrl = async () => {\n      if (!id || !type) {\n        setError(\"ID de média ou type manquant.\");\n        setLoading(false);\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const seasonStr = searchParams.get('season');\n        const episodeStr = searchParams.get('episode');\n        const apiMediaType = type === 'anime' ? 'tv' : type;\n\n        let seasonNumber: number | null = seasonStr ? Number(seasonStr) : null;\n        let episodeNumber: number | null = episodeStr ? Number(episodeStr) : null;\n\n        if (apiMediaType === 'tv' && (seasonNumber === null || episodeNumber === null)) {\n          const { data: catalogItem, error: catalogError } = await supabase\n            .from('catalog_items')\n            .select('jellyfin_id')\n            .eq('tmdb_id', Number(id))\n            .eq('media_type', apiMediaType)\n            .single();\n\n          if (catalogError || !catalogItem || !catalogItem.jellyfin_id) {\n            throw new Error(\"Cette série n'a pas été trouvée dans votre catalogue Jellyfin.\");\n          }\n\n          const { data: nextUpData, error: nextUpError } = await supabase.functions.invoke('get-jellyfin-next-up', {\n            body: { seriesJellyfinId: catalogItem.jellyfin_id },\n          });\n\n          if (nextUpError) throw nextUpError;\n          if (!nextUpData) throw new Error(\"Impossible de déterminer le prochain épisode à regarder.\");\n\n          seasonNumber = nextUpData.seasonNumber;\n          episodeNumber = nextUpData.episodeNumber;\n        }\n\n        if (apiMediaType === 'tv' && seasonNumber !== null && episodeNumber !== null) {\n          const { data: streamData, error: functionError } = await supabase.functions.invoke('get-jellyfin-episode-stream-url', {\n            body: { \n              seriesTmdbId: Number(id),\n              seasonNumber: seasonNumber,\n              episodeNumber: episodeNumber,\n              audioStreamIndex,\n              subtitleStreamIndex\n            },\n          });\n\n          if (functionError) throw functionError;\n          if (streamData.error) throw new Error(streamData.error);\n          \n          setMediaTitle(streamData.title || `S${seasonNumber} E${episodeNumber}`);\n          setCurrentEpisode({ season: seasonNumber, episode: episodeNumber });\n          setStreamUrl(streamData.streamUrl);\n          setContainer(streamData.container);\n          setChapters(streamData.chapters);\n          setAudioTracks(streamData.audioTracks || []);\n          setSubtitleTracks(streamData.subtitleTracks || []);\n        } else { // This is for movies\n          const { data: catalogItem, error: catalogError } = await supabase\n            .from('catalog_items')\n            .select('jellyfin_id, title')\n            .eq('tmdb_id', Number(id))\n            .eq('media_type', apiMediaType)\n            .single();\n\n          if (catalogError || !catalogItem || !catalogItem.jellyfin_id) {\n            throw new Error(\"Ce média n'a pas été trouvé dans votre catalogue local. Veuillez lancer une synchronisation Jellyfin depuis le panneau d'administration.\");\n          }\n          \n          setMediaTitle(catalogItem.title);\n\n          const { data: streamData, error: functionError } = await supabase.functions.invoke('get-jellyfin-stream-url', {\n            body: { \n              itemId: catalogItem.jellyfin_id,\n              audioStreamIndex,\n              subtitleStreamIndex\n            },\n          });\n\n          if (functionError) throw functionError;\n          if (streamData.error) throw new Error(streamData.error);\n\n          setStreamUrl(streamData.streamUrl);\n          setContainer(streamData.container);\n          setChapters(streamData.chapters);\n          setAudioTracks(streamData.audioTracks || []);\n          setSubtitleTracks(streamData.subtitleTracks || []);\n        }\n      } catch (err: any) {\n        console.error(\"Error fetching stream URL:\", err);\n        const baseMessage = \"Une erreur est survenue lors du chargement de la vidéo.\";\n        let details = err.message || \"\";\n        if (err instanceof FunctionsHttpError) {\n          try {\n            const errorJson = await err.context.json();\n            if (errorJson.error) {\n              details = errorJson.error;\n            }\n          } catch (e) {\n            // Ignore if context is not valid JSON\n          }\n        }\n        setError(`${baseMessage} Détails: ${details}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStreamUrl();\n  }, [id, type, searchParams, audioStreamIndex, subtitleStreamIndex]);\n\n  if (jellyfinError) {\n    return (\n      <div className=\"bg-black h-screen w-screen flex flex-col\">\n        <main className=\"flex-grow flex items-center justify-center\">\n          <div className=\"container mx-auto px-4\">\n            <Alert variant=\"destructive\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertTitle>Erreur de configuration Jellyfin</AlertTitle>\n              <AlertDescription>{jellyfinError}</AlertDescription>\n            </Alert>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-black h-screen w-screen flex flex-col\">\n      <main className=\"flex-grow flex items-center justify-center\">\n        {loading && <Skeleton className=\"w-full h-full\" />}\n        {error && !loading && (\n          <div className=\"container mx-auto px-4\">\n            <Alert variant=\"destructive\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertTitle>{t('error')}</AlertTitle>\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          </div>\n        )}\n        {streamUrl && !loading && (\n          <VideoPlayer \n            src={streamUrl} \n            container={container}\n            title={mediaTitle} \n            chapters={chapters}\n            audioTracks={audioTracks}\n            subtitleTracks={subtitleTracks}\n            onTimeUpdate={handleTimeUpdate}\n            onDurationChange={handleDurationChange}\n            startTime={startTime !== null ? Number(startTime) : null}\n            selectedSubtitleIndex={subtitleStreamIndex}\n            onBack={() => {\n              const from = location.state?.from || -1;\n              navigate(from, { replace: true });\n            }}\n          />\n        )}\n      </main>\n    </div>\n  );\n};\n\nfunction debounce<F extends (...args: any[]) => any>(func: F, waitFor: number) {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n\n  return (...args: Parameters<F>): void => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => func(...args), waitFor);\n  };\n}\n\nexport default PlayerPage;"],"names":["VideoPlayer","src","title","container","chapters","subtitleTracks","startTime","onTimeUpdate","onDurationChange","selectedSubtitleIndex","onBack","player","useRef","t","useTranslation","onLoadedMetadata","_event","playerRef","existingTracks","track","chapterTrack","TextTrack","i","chapter","nextChapter","endTime","label","d","cueDefs","c","sub","isSelected","source","onCanPlay","current","onError","detail","showError","onTimeUpdateEvent","onDurationChangeEvent","onEnded","jsxs","MediaPlayer","jsx","MediaOutlet","MediaCommunitySkin","Button","ArrowLeft","PlayerPage","type","id","useParams","navigate","useNavigate","location","useLocation","session","useSession","jellyfinError","useJellyfin","searchParams","useSearchParams","audioStreamIndex","subtitleStreamIndex","streamUrl","setStreamUrl","useState","setContainer","setChapters","audioTracks","setAudioTracks","setSubtitleTracks","mediaTitle","setMediaTitle","loading","setLoading","error","setError","duration","setDuration","currentEpisode","setCurrentEpisode","currentTimeRef","hasSavedOnUnmount","updateProgress","useCallback","time","__async","logger","record","upsertError","supabase","_a","_b","dispatchErr","err","debouncedUpdateProgress","debounce","useEffect","saveFinalProgress","handleBeforeUnload","handlePlaybackEnded","catalogItem","catalogError","nextUpData","nextUpError","params","e","handleTimeUpdate","handleDurationChange","newDuration","seasonStr","episodeStr","apiMediaType","seasonNumber","episodeNumber","streamData","functionError","baseMessage","details","FunctionsHttpError","errorJson","Alert","AlertTriangle","AlertTitle","AlertDescription","Skeleton","from","func","waitFor","timeout","args"],"mappings":"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"}