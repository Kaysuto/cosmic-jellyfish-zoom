{"version":3,"file":"Settings-DlNJRKPi.js","sources":["../../src/components/admin/settings/GeneralSettingsForm.tsx","../../src/components/admin/settings/RegistrationSettings.tsx","../../src/pages/admin/Settings.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { supabase } from '@/integrations/supabase/client';\nimport { showSuccess, showError } from '@/utils/toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Settings as SettingsIcon } from 'lucide-react';\nimport { useSession } from '@/contexts/AuthContext';\nimport { AppSetting } from '@/contexts/SettingsContext';\nimport { useMemo, useEffect, useState } from 'react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\ninterface GeneralSettingsFormProps {\n  settings: AppSetting[];\n  loading: boolean;\n  onUpdate: () => void;\n}\n\nconst GeneralSettingsForm = ({ settings, loading, onUpdate }: GeneralSettingsFormProps) => {\n  const { t } = useTranslation();\n  const { session } = useSession();\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n  const [pendingSettings, setPendingSettings] = useState<z.infer<typeof generalSettingsSchema> | null>(null);\n\n  const generalSettingsSchema = useMemo(() => z.object({\n    site_title: z.string().min(1, { message: t('site_title_empty_error') }),\n    default_language: z.enum(['fr', 'en']),\n  }), [t]);\n\n  const form = useForm<z.infer<typeof generalSettingsSchema>>({\n    resolver: zodResolver(generalSettingsSchema),\n    defaultValues: { site_title: '', default_language: 'fr' },\n  });\n\n  useEffect(() => {\n    if (!loading) {\n      const getSetting = (key: string, defaultValue: string = '') => settings.find(s => s.key === key)?.value || defaultValue;\n      form.reset({\n        site_title: getSetting('site_title', 'Statut des Services Jelly'),\n        default_language: getSetting('default_language', 'fr') as 'fr' | 'en',\n      });\n    }\n  }, [loading, settings, form]);\n\n  const handleFormSubmit = (values: z.infer<typeof generalSettingsSchema>) => {\n    setPendingSettings(values);\n    setIsConfirmOpen(true);\n  };\n\n  const handleConfirmSave = async () => {\n    if (!pendingSettings || !session?.user) return;\n    const settingsToUpdate = [\n      { key: 'site_title', value: pendingSettings.site_title },\n      { key: 'default_language', value: pendingSettings.default_language },\n    ];\n    const { error } = await supabase.from('app_settings').upsert(settingsToUpdate, { onConflict: 'key' });\n    if (error) {\n      showError(t('error_updating_setting'));\n    } else {\n      showSuccess(t('settings_updated_successfully'));\n      for (const setting of settingsToUpdate) {\n        await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'setting_updated', details: setting });\n      }\n      onUpdate();\n    }\n    setIsConfirmOpen(false);\n    setPendingSettings(null);\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\"><SettingsIcon className=\"h-5 w-5\" />{t('general_settings')}</CardTitle>\n          <CardDescription>{t('general_settings_desc')}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {loading ? <Skeleton className=\"h-48 w-full\" /> : (\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-6\">\n                <FormField control={form.control} name=\"site_title\" render={({ field }) => (<FormItem><FormLabel>{t('site_title_label')}</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>)} />\n                <FormField control={form.control} name=\"default_language\" render={({ field }) => (<FormItem><FormLabel>{t('default_language')}</FormLabel><Select onValueChange={field.onChange} defaultValue={field.value}><FormControl><SelectTrigger><SelectValue /></SelectTrigger></FormControl><SelectContent><SelectItem value=\"fr\">Fran√ßais</SelectItem><SelectItem value=\"en\">English</SelectItem></SelectContent></Select><FormDescription>{t('default_language_desc')}</FormDescription><FormMessage /></FormItem>)} />\n                <Button type=\"submit\" disabled={form.formState.isSubmitting}>{t('save_changes')}</Button>\n              </form>\n            </Form>\n          )}\n        </CardContent>\n      </Card>\n      <AlertDialog open={isConfirmOpen} onOpenChange={setIsConfirmOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader><AlertDialogTitle>{t('confirm_global_changes_title')}</AlertDialogTitle><AlertDialogDescription>{t('confirm_global_changes_desc')}</AlertDialogDescription></AlertDialogHeader>\n          <AlertDialogFooter><AlertDialogCancel onClick={() => setPendingSettings(null)}>{t('cancel')}</AlertDialogCancel><AlertDialogAction onClick={handleConfirmSave}>{t('save_changes')}</AlertDialogAction></AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default GeneralSettingsForm;","import { useTranslation } from 'react-i18next';\nimport { useState, useEffect } from 'react';\nimport { supabase } from '@/integrations/supabase/client';\nimport { showSuccess, showError } from '@/utils/toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Shield } from 'lucide-react';\nimport { useSession } from '@/contexts/AuthContext';\nimport { AppSetting } from '@/contexts/SettingsContext';\n\ninterface RegistrationSettingsProps {\n  settings: AppSetting[];\n  loading: boolean;\n  onUpdate: () => void;\n}\n\nconst RegistrationSettings = ({ settings, loading, onUpdate }: RegistrationSettingsProps) => {\n  const { t } = useTranslation();\n  const { session } = useSession();\n  const [allowRegistrations, setAllowRegistrations] = useState(true);\n\n  useEffect(() => {\n    if (!loading) {\n      const registrationSetting = settings.find(s => s.key === 'allow_registrations');\n      setAllowRegistrations(registrationSetting ? registrationSetting.value === 'true' : true);\n    }\n  }, [loading, settings]);\n\n  const handleRegistrationToggle = async (checked: boolean) => {\n    if (!session?.user) return;\n    const originalState = allowRegistrations;\n    setAllowRegistrations(checked);\n    const { error } = await supabase\n      .from('app_settings')\n      .upsert({ key: 'allow_registrations', value: checked.toString() }, { onConflict: 'key' });\n\n    if (error) {\n      showError(t('error_updating_setting'));\n      setAllowRegistrations(originalState);\n    } else {\n      showSuccess(t(checked ? 'registrations_enabled' : 'registrations_disabled'));\n      await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'setting_updated', details: { key: 'allow_registrations', value: checked.toString() } });\n      onUpdate();\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\"><Shield className=\"h-5 w-5\" />{t('registration_settings')}</CardTitle>\n        <CardDescription>{t('allow_new_registrations_desc')}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        {loading ? <Skeleton className=\"h-6 w-52\" /> : (\n          <div className=\"flex items-center space-x-2\">\n            <Switch id=\"allow-registrations\" checked={allowRegistrations} onCheckedChange={handleRegistrationToggle} />\n            <Label htmlFor=\"allow-registrations\">{t('allow_new_registrations')}</Label>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RegistrationSettings;","import { useTranslation } from 'react-i18next';\nimport { useProfile } from '@/hooks/useProfile';\nimport { useSettings } from '@/contexts/SettingsContext';\nimport { motion } from 'framer-motion';\nimport GeneralSettingsForm from '@/components/admin/settings/GeneralSettingsForm';\nimport RegistrationSettings from '@/components/admin/settings/RegistrationSettings';\n\nconst Settings = () => {\n  const { t } = useTranslation();\n  const { profile } = useProfile();\n  const { settings, loading: settingsLoading, refreshSettings } = useSettings();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\n    >\n      <div className=\"max-w-2xl mx-auto space-y-8\">\n        <div className=\"space-y-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('settings')}</h1>\n          <p className=\"text-muted-foreground\">{t('settings_description')}</p>\n        </div>\n\n        {profile?.role === 'admin' && (\n          <>\n            <GeneralSettingsForm \n              settings={settings} \n              loading={settingsLoading} \n              onUpdate={refreshSettings} \n            />\n            <RegistrationSettings \n              settings={settings} \n              loading={settingsLoading} \n              onUpdate={refreshSettings} \n            />\n          </>\n        )}\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Settings;"],"names":["GeneralSettingsForm","settings","loading","onUpdate","t$1","useTranslation","session","useSession","isConfirmOpen","setIsConfirmOpen","useState","pendingSettings","setPendingSettings","generalSettingsSchema","useMemo","z.object","z.string","t","z.enum","form","useForm","zodResolver","useEffect","getSetting","key","defaultValue","_a","s","handleFormSubmit","values","handleConfirmSave","__async","settingsToUpdate","error","supabase","showError","showSuccess","setting","jsxs","Fragment","Card","CardHeader","CardTitle","jsx","SettingsIcon","CardDescription","CardContent","Skeleton","Form","__spreadProps","__spreadValues","FormField","field","FormItem","FormLabel","FormControl","Input","FormMessage","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","FormDescription","Button","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","RegistrationSettings","allowRegistrations","setAllowRegistrations","registrationSetting","handleRegistrationToggle","checked","originalState","Shield","Switch","Label","Settings","profile","useProfile","settingsLoading","refreshSettings","useSettings","motion"],"mappings":"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"}