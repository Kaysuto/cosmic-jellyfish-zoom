{"version":3,"file":"UserManager-DmQ1vJZj.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-up-down.js","../../src/components/admin/UserForm.tsx","../../src/components/admin/UserManager.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowUpDown = createLucideIcon(\"ArrowUpDown\", [\n  [\"path\", { d: \"m21 16-4 4-4-4\", key: \"f6ql7i\" }],\n  [\"path\", { d: \"M17 20V4\", key: \"1ejh1v\" }],\n  [\"path\", { d: \"m3 8 4-4 4 4\", key: \"11wl7u\" }],\n  [\"path\", { d: \"M7 4v16\", key: \"1glfcx\" }]\n]);\n\nexport { ArrowUpDown as default };\n//# sourceMappingURL=arrow-up-down.js.map\n","import { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\nconst userSchema = z.object({\n  first_name: z.string().min(1, { message: 'Le prénom est requis' }),\n  last_name: z.string().min(1, { message: 'Le nom est requis' }),\n  email: z.string().email({ message: \"L'adresse e-mail n'est pas valide\" }),\n  password: z.string()\n    .min(6, { message: 'Le mot de passe doit faire au moins 6 caractères.' })\n    .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/, { message: 'Doit contenir une majuscule, une minuscule et un chiffre.' }),\n  role: z.enum(['user', 'admin']),\n});\n\nexport type UserFormValues = z.infer<typeof userSchema>;\n\ninterface UserFormProps {\n  onSubmit: (values: UserFormValues) => void;\n  onCancel: () => void;\n  isSubmitting: boolean;\n}\n\nconst UserForm = ({ onSubmit, onCancel, isSubmitting }: UserFormProps) => {\n  const { t } = useTranslation();\n\n  const form = useForm<UserFormValues>({\n    resolver: zodResolver(userSchema),\n    defaultValues: {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      role: 'user',\n    },\n  });\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"first_name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t('first_name')}</FormLabel>\n                <FormControl><Input {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"last_name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>{t('last_name')}</FormLabel>\n                <FormControl><Input {...field} /></FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('email_address')}</FormLabel>\n              <FormControl><Input type=\"email\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('password')}</FormLabel>\n              <FormControl><Input type=\"password\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"role\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('role')}</FormLabel>\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder={t('role')} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"user\">{t('user_role')}</SelectItem>\n                  <SelectItem value=\"admin\">{t('admin_role')}</SelectItem>\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <div className=\"flex justify-end gap-2 pt-4\">\n          <Button type=\"button\" variant=\"ghost\" onClick={onCancel} disabled={isSubmitting}>\n            {t('cancel')}\n          </Button>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            {isSubmitting ? t('saving') : t('save')}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default UserForm;","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useUsers } from '@/hooks/useUsers';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useTranslation } from 'react-i18next';\nimport { Button, buttonVariants } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from '@/components/ui/alert-dialog';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Trash2, MoreHorizontal, User, Shield, KeyRound, ShieldOff, Info, Edit, ArrowUpDown, Search, PlusCircle } from 'lucide-react';\nimport { showSuccess, showError } from '@/utils/toast';\nimport { format } from 'date-fns';\nimport { fr, enUS } from 'date-fns/locale';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger, DropdownMenuSub, DropdownMenuSubTrigger, DropdownMenuSubContent, DropdownMenuPortal, DropdownMenuSeparator } from '@/components/ui/dropdown-menu';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { getGravatarURL } from '@/lib/gravatar';\nimport { Badge } from '@/components/ui/badge';\nimport { Profile } from '@/hooks/useProfile';\nimport { useSession } from '@/contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport UserForm, { UserFormValues } from './UserForm';\nimport { motion } from 'framer-motion';\nimport { FunctionsHttpError } from '@supabase/supabase-js';\n\ntype SortByType = 'updated_at' | 'email' | 'first_name' | 'role' | 'mfa';\n\nconst UserManager = () => {\n  const { t, i18n } = useTranslation();\n  const { session } = useSession();\n  const { users, loading, refreshUsers } = useUsers();\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [userToDelete, setUserToDelete] = useState<Profile | null>(null);\n  const [isMfaDialogOpen, setIsMfaDialogOpen] = useState(false);\n  const [userToEditMfa, setUserToEditMfa] = useState<Profile | null>(null);\n  const [mfaUserIds, setMfaUserIds] = useState<string[]>([]);\n  const [loadingMfa, setLoadingMfa] = useState(true);\n  const [isSheetOpen, setIsSheetOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [filterRole, setFilterRole] = useState<'all' | 'admin' | 'user'>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState<SortByType>('updated_at');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n\n  const currentLocale = i18n.language === 'fr' ? fr : enUS;\n\n  const fetchMfaStatus = useCallback(async () => {\n    setLoadingMfa(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('get-mfa-factors');\n      if (error) throw error;\n      setMfaUserIds(data.userIds || []);\n    } catch (error: any) {\n      console.error('Error fetching MFA status:', error);\n      showError(t('error_fetching_mfa_status'));\n    } finally {\n      setLoadingMfa(false);\n    }\n  }, [t]);\n\n  useEffect(() => {\n    fetchMfaStatus();\n  }, [fetchMfaStatus]);\n\n  const filteredAndSortedUsers = useMemo(() => {\n    return users\n      .filter(user => {\n        if (filterRole !== 'all' && user.role !== filterRole) {\n          return false;\n        }\n        if (searchTerm) {\n          const term = searchTerm.toLowerCase();\n          const fullName = `${user.first_name || ''} ${user.last_name || ''}`.toLowerCase();\n          const email = user.email?.toLowerCase() || '';\n          if (!fullName.includes(term) && !email.includes(term)) {\n            return false;\n          }\n        }\n        return true;\n      })\n      .sort((a, b) => {\n        let aValue: string | boolean, bValue: string | boolean;\n\n        switch (sortBy) {\n          case 'mfa':\n            aValue = mfaUserIds.includes(a.id);\n            bValue = mfaUserIds.includes(b.id);\n            break;\n          case 'first_name':\n            aValue = `${a.first_name || ''} ${a.last_name || ''}`;\n            bValue = `${b.first_name || ''} ${b.last_name || ''}`;\n            break;\n          default:\n            aValue = a[sortBy] || '';\n            bValue = b[sortBy] || '';\n        }\n        \n        if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\n        return 0;\n      });\n  }, [users, filterRole, searchTerm, sortBy, sortOrder, mfaUserIds]);\n\n  const handleSort = (column: SortByType) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(column);\n      setSortOrder('desc');\n    }\n  };\n\n  const confirmDelete = (user: Profile) => {\n    setUserToDelete(user);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const handleDelete = async () => {\n    if (!userToDelete || !session?.user) return;\n    try {\n      const { error } = await supabase.functions.invoke('delete-user', { body: { userId: userToDelete.id } });\n      if (error) throw error;\n      showSuccess(t('user_deleted_successfully'));\n      await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'user_deleted', details: { deleted_user_id: userToDelete.id, email: userToDelete.email } });\n      refreshUsers();\n    } catch (error: any) {\n      showError(`${t('error_deleting_user')}: ${error.message}`);\n    } finally {\n      setIsDeleteDialogOpen(false);\n      setUserToDelete(null);\n    }\n  };\n\n  const handleRoleChange = async (userId: string, newRole: 'admin' | 'user') => {\n    if (!session?.user) return;\n    const { error } = await supabase.from('profiles').update({ role: newRole }).eq('id', userId);\n    if (error) showError(t('error_updating_role'));\n    else {\n      showSuccess(t('role_updated_successfully'));\n      await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'user_role_changed', details: { target_user_id: userId, new_role: newRole } });\n      refreshUsers();\n    }\n  };\n\n  const confirmDisableMfa = (user: Profile) => {\n    setUserToEditMfa(user);\n    setIsMfaDialogOpen(true);\n  };\n\n  const handleDisableMfa = async () => {\n    if (!userToEditMfa || !session?.user) return;\n    try {\n      const { error } = await supabase.functions.invoke('admin-unenroll-mfa', { body: { userId: userToEditMfa.id } });\n      if (error) throw error;\n      showSuccess(t('mfa_disabled_for_user', { email: userToEditMfa.email }));\n      await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'admin_mfa_disabled', details: { target_user_id: userToEditMfa.id, email: userToEditMfa.email } });\n      fetchMfaStatus();\n    } catch (error: any) {\n      showError(`${t('error_disabling_mfa')}: ${error.message}`);\n    } finally {\n      setIsMfaDialogOpen(false);\n      setUserToEditMfa(null);\n    }\n  };\n\n  const handleCreateUser = async (values: UserFormValues) => {\n    if (!session?.user) return;\n    setIsSubmitting(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('create-user', { body: values });\n\n      if (error) {\n        throw error;\n      }\n\n      const newUser = data.user;\n\n      showSuccess(t('user_created_successfully', { email: values.email }));\n      if (newUser?.id) {\n        await supabase.from('audit_logs').insert({ user_id: session.user.id, action: 'user_created_by_admin', details: { new_user_id: newUser.id, email: values.email, role: values.role } });\n      }\n      refreshUsers();\n      setIsSheetOpen(false);\n    } catch (error: any) {\n      console.error('create-user invoke error:', error);\n      let message = error.message;\n      if (error instanceof FunctionsHttpError) {\n        try {\n          const errorJson = await error.context.json();\n          message = errorJson.error || message;\n        } catch {\n          // Ignore if context is not valid JSON\n        }\n      }\n      showError(`Erreur lors de la création de l'utilisateur: ${message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading || loadingMfa) {\n    return (\n      <Card>\n        <CardHeader><Skeleton className=\"h-8 w-48\" /></CardHeader>\n        <CardContent><Skeleton className=\"h-96 w-full\" /></CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeInOut\" }}\n    >\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle>{t('manage_users')}</CardTitle>\n          <Button onClick={() => setIsSheetOpen(true)}>\n            <PlusCircle className=\"mr-2 h-4 w-4\" />\n            Créer un utilisateur\n          </Button>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4 mb-4\">\n            <div className=\"relative w-full sm:w-auto sm:flex-grow max-w-sm\">\n              <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder={t('search_user_placeholder')}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n            <div className=\"flex items-center gap-2 w-full sm:w-auto\">\n              <Select value={filterRole} onValueChange={(value) => setFilterRole(value as any)}>\n                <SelectTrigger className=\"w-full sm:w-[180px]\">\n                  <SelectValue placeholder={t('filter_by_role')} />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">{t('all_roles')}</SelectItem>\n                  <SelectItem value=\"admin\">{t('admin_role')}</SelectItem>\n                  <SelectItem value=\"user\">{t('user_role')}</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>\n                  <Button variant=\"ghost\" onClick={() => handleSort('first_name')}>\n                    {t('user_header')} <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </TableHead>\n                <TableHead>\n                  <Button variant=\"ghost\" onClick={() => handleSort('role')}>\n                    {t('role')} <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </TableHead>\n                <TableHead>\n                  <Button variant=\"ghost\" onClick={() => handleSort('mfa')}>\n                    MFA <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </TableHead>\n                <TableHead>\n                  <Button variant=\"ghost\" onClick={() => handleSort('updated_at')}>\n                    {t('last_update')} <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </TableHead>\n                <TableHead className=\"text-right\">{t('actions')}</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredAndSortedUsers.map((user) => {\n                const hasMfa = mfaUserIds.includes(user.id);\n                const isCurrentUser = user.id === session?.user?.id;\n                return (\n                  <TableRow key={user.id} className={isCurrentUser ? 'bg-muted/50' : ''}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-3\">\n                        <Avatar className=\"h-9 w-9\"><AvatarImage src={user.avatar_url || getGravatarURL(user.email)} /><AvatarFallback>{user.email?.[0].toUpperCase()}</AvatarFallback></Avatar>\n                        <div>\n                          <div className=\"font-medium\">{user.first_name} {user.last_name}</div>\n                          <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell><Badge variant={user.role === 'admin' ? 'default' : 'secondary'}>{user.role === 'admin' ? t('admin_role') : t('user_role')}</Badge></TableCell>\n                    <TableCell>\n                      <Badge variant={hasMfa ? 'default' : 'outline'} className={hasMfa ? 'bg-green-500/20 text-green-500 border-green-500/30' : ''}>\n                        {hasMfa ? t('mfa_enabled') : t('mfa_disabled')}\n                      </Badge>\n                    </TableCell>\n                    <TableCell>{format(new Date(user.updated_at), 'PP', { locale: currentLocale })}</TableCell>\n                    <TableCell className=\"text-right\">\n                      {isCurrentUser ? (\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <span tabIndex={0}>\n                              <Button variant=\"ghost\" size=\"icon\" disabled>\n                                <MoreHorizontal className=\"h-4 w-4\" />\n                              </Button>\n                            </span>\n                          </TooltipTrigger>\n                          <TooltipContent>\n                            <p>{t('cannot_edit_self_tooltip')}</p>\n                          </TooltipContent>\n                        </Tooltip>\n                      ) : (\n                        <DropdownMenu modal={false}>\n                          <DropdownMenuTrigger asChild><Button variant=\"ghost\" size=\"icon\"><MoreHorizontal className=\"h-4 w-4\" /></Button></DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuItem asChild>\n                              <Link to={`/profile/${user.id}`} className=\"cursor-pointer\">\n                                <User className=\"mr-2 h-4 w-4\" />\n                                <span>Voir le profil</span>\n                              </Link>\n                            </DropdownMenuItem>\n                            <DropdownMenuItem asChild>\n                              <Link to={`/admin/users/${user.id}/edit`} className=\"cursor-pointer\">\n                                <Edit className=\"mr-2 h-4 w-4\" />\n                                <span>{t('edit')}</span>\n                              </Link>\n                            </DropdownMenuItem>\n                            <DropdownMenuSub>\n                              <DropdownMenuSubTrigger><Shield className=\"mr-2 h-4 w-4\" /><span>{t('role')}</span></DropdownMenuSubTrigger>\n                              <DropdownMenuPortal>\n                                <DropdownMenuSubContent>\n                                  <DropdownMenuItem onClick={() => handleRoleChange(user.id, 'admin')}><Shield className=\"mr-2 h-4 w-4\" />{t('admin_role')}</DropdownMenuItem>\n                                  <DropdownMenuItem onClick={() => handleRoleChange(user.id, 'user')}><User className=\"mr-2 h-4 w-4\" />{t('user_role')}</DropdownMenuItem>\n                                </DropdownMenuSubContent>\n                              </DropdownMenuPortal>\n                            </DropdownMenuSub>\n                            <DropdownMenuItem onClick={() => confirmDisableMfa(user)} disabled={!hasMfa}>\n                              <ShieldOff className=\"mr-2 h-4 w-4\" />\n                              <span>{t('disable_mfa')}</span>\n                            </DropdownMenuItem>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem onClick={() => confirmDelete(user)} className=\"text-destructive\"><Trash2 className=\"mr-2 h-4 w-4\" /><span>{t('delete')}</span></DropdownMenuItem>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      <Dialog open={isSheetOpen} onOpenChange={setIsSheetOpen}>\n        <DialogContent className=\"sm:max-w-lg\">\n          <DialogHeader>\n            <DialogTitle>Créer un nouvel utilisateur</DialogTitle>\n            <DialogDescription>\n              Remplissez les informations ci-dessous. Un e-mail de confirmation\n              sera envoyé à l'utilisateur.\n            </DialogDescription>\n          </DialogHeader>\n          <UserForm\n            onSubmit={handleCreateUser}\n            onCancel={() => setIsSheetOpen(false)}\n            isSubmitting={isSubmitting}\n          />\n        </DialogContent>\n      </Dialog>\n\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader><AlertDialogTitle>{t('confirm_delete_title')}</AlertDialogTitle><AlertDialogDescription>{t('confirm_delete_user', { email: userToDelete?.email })}</AlertDialogDescription></AlertDialogHeader>\n          <AlertDialogFooter><AlertDialogCancel onClick={() => setUserToDelete(null)}>{t('cancel')}</AlertDialogCancel><AlertDialogAction onClick={handleDelete} className=\"bg-destructive hover:bg-destructive/90\">{t('delete')}</AlertDialogAction></AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <AlertDialog open={isMfaDialogOpen} onOpenChange={setIsMfaDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader><AlertDialogTitle>{t('confirm_disable_mfa_title')}</AlertDialogTitle><AlertDialogDescription>{t('confirm_disable_mfa_desc', { email: userToEditMfa?.email })}</AlertDialogDescription></AlertDialogHeader>\n          <AlertDialogFooter><AlertDialogCancel onClick={() => setUserToEditMfa(null)}>{t('cancel')}</AlertDialogCancel><AlertDialogAction onClick={handleDisableMfa} className={buttonVariants({ variant: \"destructive\" })}>{t('disable_mfa')}</AlertDialogAction></AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </motion.div>\n  );\n};\n\nexport default UserManager;"],"names":["ArrowUpDown","createLucideIcon","userSchema","z.object","z.string","z.enum","UserForm","onSubmit","onCancel","isSubmitting","t","useTranslation","form","useForm","zodResolver","jsx","Form","__spreadProps","__spreadValues","jsxs","FormField","field","FormItem","FormLabel","FormControl","Input","FormMessage","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","UserManager","i18n","session","useSession","users","loading","refreshUsers","useUsers","isDeleteDialogOpen","setIsDeleteDialogOpen","useState","userToDelete","setUserToDelete","isMfaDialogOpen","setIsMfaDialogOpen","userToEditMfa","setUserToEditMfa","mfaUserIds","setMfaUserIds","loadingMfa","setLoadingMfa","isSheetOpen","setIsSheetOpen","setIsSubmitting","filterRole","setFilterRole","searchTerm","setSearchTerm","sortBy","setSortBy","sortOrder","setSortOrder","currentLocale","fr","enUS","fetchMfaStatus","useCallback","__async","data","error","supabase","showError","useEffect","filteredAndSortedUsers","useMemo","user","term","fullName","email","_a","a","b","aValue","bValue","handleSort","column","confirmDelete","handleDelete","showSuccess","handleRoleChange","userId","newRole","confirmDisableMfa","handleDisableMfa","handleCreateUser","values","newUser","message","FunctionsHttpError","e","Card","CardHeader","Skeleton","CardContent","motion","CardTitle","PlusCircle","Search","value","Table","TableHeader","TableRow","TableHead","TableBody","hasMfa","isCurrentUser","TableCell","Avatar","AvatarImage","getGravatarURL","AvatarFallback","_b","Badge","format","Tooltip","TooltipTrigger","MoreHorizontal","TooltipContent","DropdownMenu","DropdownMenuTrigger","DropdownMenuContent","DropdownMenuItem","Link","User","Edit","DropdownMenuSub","DropdownMenuSubTrigger","Shield","DropdownMenuPortal","DropdownMenuSubContent","ShieldOff","DropdownMenuSeparator","Trash2","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","buttonVariants"],"mappings":"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","x_google_ignoreList":[0]}